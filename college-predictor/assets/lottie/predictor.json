{"v":"5.7.11","fr":25,"ip":0,"op":151,"w":350,"h":350,"nm":"Comp 17","assets":[],"layers":[{"ind":1,"ty":4,"nm":"Layer 10","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[116.921,149.588,0],"ix":2,"l":2},"a":{"a":0,"k":[30.55,-56.412,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":112,"s":[0,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":119,"s":[100,100,100]},{"t":138,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[32.473,-53.836],[44.964,-56.412],[32.473,-58.989],[30.55,-77.788],[28.626,-58.989],[16.135,-56.412],[28.626,-53.836],[30.55,-35.037]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1}],"ip":0,"op":250,"st":0},{"ind":2,"ty":4,"nm":"Layer 9","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[219.921,84.588,0],"ix":2,"l":2},"a":{"a":0,"k":[30.55,-56.412,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":93,"s":[0,0,100]},{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":100,"s":[100,100,100]},{"t":119,"s":[0,0,100]}],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[32.473,-53.836],[44.964,-56.412],[32.473,-58.989],[30.55,-77.788],[28.626,-58.989],[16.135,-56.412],[28.626,-53.836],[30.55,-35.037]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1}],"ip":0,"op":250,"st":0},{"ind":3,"ty":4,"nm":"Layer 8","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":75,"s":[360]},{"t":96,"s":[0]}],"ix":10,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":75,"s":[203.103,224.092,0],"to":[-15.5,-15.333,0],"ti":[15.5,15.333,0]},{"t":96,"s":[110.103,132.092,0]}],"ix":2,"l":2,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"a":{"a":0,"k":[-64.897,-42.908,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":75,"s":[0,0,100]},{"t":81,"s":[100,100,100]}],"ix":6,"l":2,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"}},"ao":0,"ef":[{"ty":5,"nm":"Ålosilo pli pura","np":34,"ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0.39,-0.155],[0.232,-0.212],[0.151,-0.28],[0.015,-0.32],[-0.1,-0.32],[-0.081,-0.191],[-0.361,-0.214],[-0.191,-0.081],[-0.426,0.114],[-0.39,0.155],[-0.232,0.212],[-0.151,0.28],[-0.015,0.32],[0.1,0.32],[0.081,0.191],[0.361,0.214],[0.191,0.081],[0.426,-0.114]],"o":[[-0.39,0.155],[-0.313,0.074],[-0.262,0.169],[-0.176,0.276],[-0.072,0.32],[0.081,0.191],[0.214,0.361],[0.191,0.081],[0.426,0.114],[0.39,-0.155],[0.313,-0.074],[0.262,-0.169],[0.176,-0.276],[0.072,-0.32],[-0.081,-0.191],[-0.214,-0.361],[-0.191,-0.081],[-0.426,-0.114],[0,0]],"v":[[-46.91,-61.599],[-48.079,-61.134],[-48.896,-60.704],[-49.516,-60.03],[-49.801,-59.136],[-49.758,-58.177],[-49.516,-57.603],[-48.653,-56.741],[-48.079,-56.498],[-46.801,-56.498],[-45.632,-56.963],[-44.815,-57.393],[-44.195,-58.067],[-43.91,-58.961],[-43.953,-59.92],[-44.195,-60.494],[-45.058,-61.356],[-45.632,-61.599],[-46.91,-61.599]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[3.017,-1.344],[0.143,-0.52],[-0.329,-0.511],[-0.613,-0.14],[-0.622,0.277],[-2.983,1.419],[0.662,1.027],[1.218,-0.579]],"o":[[-2.983,1.419],[-0.515,0.23],[-0.158,0.575],[0.331,0.513],[0.669,0.152],[3.017,-1.344],[1.139,-0.541],[-0.755,-1.17],[0,0]],"v":[[-31.325,-68.771],[-40.327,-64.627],[-41.431,-63.19],[-41.189,-61.338],[-39.752,-60.233],[-37.9,-60.476],[-28.899,-64.62],[-28.037,-67.909],[-31.325,-68.771]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-3.85,0.918],[0,0],[1.006,0.706],[-1.766,10.42],[-0.601,0.512],[-6.464,-1.519],[-9.819,1.501]],"o":[[0,0],[-1.13,0.477],[-8.672,-6.04],[0.124,-0.795],[3.974,5.298],[9.661,2.278],[3.921,-0.583]],"v":[[-65.229,-26.495],[-110.758,-7.386],[-114.202,-7.704],[-124.551,-32.393],[-123.403,-34.407],[-106.467,-24.729],[-76.868,-24.199]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.859,0.902,0.98,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","cix":2,"ix":3},{"ty":"gr","it":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-1.876,-4.673],[0,0],[-4.352,-3.129],[-0.084,0.035],[0,0],[-1.011,0.375],[0,0],[1.056,0.7],[1.048,1.06],[1.1,2.736],[-1.36,4.728],[-0.013,0.203]],"o":[[0,0],[-0.704,5.031],[0,0],[2.077,4.945],[0.072,0.056],[0,0],[0.993,-0.417],[0,0],[-1.211,-0.365],[-1.225,-0.838],[-2.062,-2.098],[-1.837,-4.578],[0.032,-0.1],[0,0]],"v":[[-66.126,-58.685],[-73.632,-55.533],[-71.833,-40.706],[-71.644,-40.256],[-61.843,-27.929],[-60.933,-28.311],[-58.842,-29.19],[-55.863,-30.441],[-54.127,-31.17],[-57.327,-33.048],[-60.737,-35.896],[-65.512,-43.225],[-66.249,-57.662],[-66.158,-58.118]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,0.38,0.38,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","cix":2,"ix":4},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.315,-1.392],[-3.209,-7.642],[-3.315,1.392],[3.209,7.642]],"o":[[-3.316,1.392],[3.21,7.642],[3.315,-1.392],[-3.21,-7.642]],"v":[[-18.961,-78.498],[-19.153,-62.139],[-7.338,-50.823],[-7.147,-67.182]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.796,0.859,0.957,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","cix":2,"ix":5},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[1.006,0.706],[-1.766,10.42],[-0.601,0.512],[-0.371,0.159],[0,0]],"o":[[0,0],[0,0],[-1.13,0.477],[-8.672,-6.04],[0.124,-0.795],[0.3,-0.283],[0,0],[0,0]],"v":[[-7.338,-50.813],[-65.229,-26.495],[-110.758,-7.386],[-114.202,-7.704],[-124.551,-32.393],[-123.403,-34.407],[-122.379,-35.06],[-18.959,-78.487]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.922,0.949,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","cix":2,"ix":6},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3.55,-1.878],[-1.503,-1.177],[-0.713,-0.735],[-0.357,-0.067],[3.659,0.689],[-2.096,-2.773],[0.574,0.233],[0.794,0.523],[1.492,1.345],[2.191,3.605]],"o":[[3.167,2.697],[1.647,0.871],[0.791,0.619],[0.339,0.349],[-3.659,-0.689],[1.257,3.285],[-0.426,-0.564],[-0.845,-0.342],[-1.638,-1.08],[-3.039,-2.74],[0,0]],"v":[[-58.738,-34.898],[-48.616,-28.006],[-44.097,-25.177],[-41.836,-23.143],[-39.978,-20.977],[-50.956,-23.045],[-45.879,-13.874],[-48.006,-14.863],[-50.411,-16.186],[-55.116,-19.833],[-63.043,-29.429]],"c":false},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,0.38,0.38,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","cix":2,"ix":7}],"ip":0,"op":250,"st":0},{"ind":4,"ty":4,"nm":"Layer 6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[195,145,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":50,"s":[0,0,100]},{"t":59,"s":[100,100,100]}],"ix":6,"l":2,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"}},"ao":0,"ef":[{"ty":5,"nm":"Ålosilo pli pura","np":34,"ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"Ålosilo pli pura 2","np":34,"ix":2,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.758,2.197],[-2.313,-2.725],[2.509,-2.547],[2.004,4.82]],"o":[[2.796,-2.227],[2.313,2.725],[-3.015,3.06],[-1.349,-3.244]],"v":[[62.343,-35.638],[71.988,-34.649],[71.578,-24.888],[59.754,-25.344]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,0.38,0.38,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-6.093,-10.643],[-0.787,3.585],[-4.953,-2.4],[0.984,2.734],[-7.458,0.217],[3.324,5.001],[-4.26,1.633],[1.285,11.806]],"o":[[-5.494,10.964],[-0.673,-3.608],[2.8,4.738],[-2.214,-1.881],[5.406,5.142],[-5.36,-2.706],[3.469,2.962],[-11.024,-4.417],[0,0]],"v":[[63.088,-26.362],[64.067,8.946],[64.241,-1.991],[76.215,9.033],[71.307,1.948],[91.672,9.745],[78.349,-2.079],[91.199,0.131],[70.698,-26.889]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,0.792,0.424,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.836,8.224],[2.381,0.48],[2.251,-13.371],[0.146,-0.802],[0.88,-4.152],[0.922,-6.415],[-0.693,-0.206],[-0.075,-0.007],[-0.118,0.811],[-1.304,6.148],[-0.758,4.311],[-0.128,0.792]],"o":[[-0.246,-2.417],[2.258,9.221],[-0.132,0.806],[-0.751,4.236],[-1.321,6.204],[-0.093,0.726],[0.07,0.021],[0.811,0.118],[0.907,-6.312],[0.893,-4.194],[0.156,-0.784],[1.731,-10.325]],"v":[[73.764,-83.471],[69.141,-88.477],[69.346,-55.172],[68.922,-52.761],[66.381,-40.122],[62.772,-21.097],[63.814,-19.48],[64.03,-19.431],[65.696,-20.689],[69.26,-39.513],[71.837,-52.325],[72.259,-54.675]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.922,0.949,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","cix":2,"ix":3},{"ty":"tr","p":{"a":0,"k":[68.5,-88.5],"ix":2},"a":{"a":0,"k":[68.5,-88.5],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":1,"k":[{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":59,"s":[0]},{"i":{"x":[0.667],"y":[1]},"o":{"x":[0.333],"y":[0]},"t":68,"s":[-29]},{"t":75,"s":[0]}],"ix":6,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-0.334,-0.28],[-0.447,-0.145],[-0.496,0.019],[-0.43,0.226],[-0.327,0.352],[-0.188,0.243],[-0.002,0.651],[0.043,0.32],[0.447,0.45],[0.334,0.28],[0.447,0.145],[0.496,-0.019],[0.43,-0.226],[0.327,-0.352],[0.188,-0.243],[0.002,-0.651],[-0.043,-0.32],[-0.447,-0.45]],"o":[[0.334,0.28],[0.327,0.352],[0.43,0.226],[0.496,0.019],[0.447,-0.145],[0.188,-0.243],[0.326,-0.562],[-0.043,-0.32],[-0.171,-0.611],[-0.334,-0.28],[-0.327,-0.352],[-0.43,-0.226],[-0.496,-0.019],[-0.447,0.145],[-0.188,0.243],[-0.326,0.562],[0.043,0.32],[0.171,0.611],[0,0]],"v":[[41.209,-84.961],[42.211,-84.121],[43.371,-83.376],[44.76,-83.065],[46.149,-83.376],[47.31,-84.121],[47.874,-84.851],[48.366,-86.671],[48.237,-87.629],[47.31,-89.22],[46.308,-90.06],[45.148,-90.806],[43.759,-91.116],[42.37,-90.806],[41.209,-90.06],[40.645,-89.33],[40.153,-87.51],[40.282,-86.552],[41.209,-84.961]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.525,0.553,0.576,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-3.057,-3.008],[-1.325,1.443],[1.436,1.414],[3.382,2.636],[1.044,0],[0.609,-0.663],[-0.043,-0.96],[-0.734,-0.572]],"o":[[3.382,2.636],[1.346,1.324],[1.313,-1.43],[-3.057,-3.008],[-0.788,-0.614],[-0.884,0],[-0.631,0.687],[0.04,0.886],[0,0]],"v":[[23.181,-101.372],[32.847,-92.899],[37.946,-92.899],[37.946,-97.998],[28.28,-106.471],[25.73,-107.527],[23.181,-106.471],[22.125,-103.922],[23.181,-101.372]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.525,0.553,0.576,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-4.609,-2.137],[0,0],[4.786,2.773],[15.259,4.521],[9.184,0.494],[1.272,-1.413],[0,0],[-6.128,-0.194],[-9.484,-7.206],[-10.95,-4.662]],"o":[[0,0],[-0.336,-1.872],[-7.947,-4.609],[-15.259,-4.539],[-5.563,-0.3],[0,0],[0.636,-2.101],[2.614,11.621],[9.483,7.205],[4.662,1.978]],"v":[[54.827,-31.087],[54.492,-23.281],[46.456,-30.398],[10.093,-44.879],[-28.266,-52.615],[-38.915,-50.99],[-21.501,-80.271],[-10.729,-83.079],[9.404,-53.851],[40.858,-37.162]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.239,0.267,0.286,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","cix":2,"ix":3},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.283,-4.857],[0,0],[0,0],[0,0],[4.786,2.773],[15.259,4.521],[9.184,0.494],[1.272,-1.413],[0,0],[-6.128,-0.194],[-11.85,-3.532]],"o":[[0,0],[0,0],[0,0],[-0.336,-1.872],[-7.947,-4.609],[-15.259,-4.539],[-5.563,-0.3],[0,0],[0.636,-2.101],[7.647,0.265],[20.31,6.022]],"v":[[55.958,-58.019],[55.94,-57.56],[54.827,-31.087],[54.492,-23.281],[46.456,-30.398],[10.093,-44.879],[-28.266,-52.615],[-38.915,-50.99],[-21.501,-80.271],[-10.729,-83.079],[19.736,-77.304]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.31,0.341,0.373,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","cix":2,"ix":4},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[-21.978,-64.929],[-77.214,-93.726],[29.015,-113.099],[123.304,-38.648],[37.363,-51.526]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.165,0.192,0.204,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","cix":2,"ix":5},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0],[0,0]],"v":[[125,-44.369],[123.299,-38.646],[107.791,-45.346],[108.244,-46.872],[71.837,-52.325],[68.922,-52.761],[39.067,-57.235],[-20.287,-70.644],[-62.533,-92.671],[-62.159,-90.669],[-77.212,-93.727],[-75.515,-99.435],[30.717,-118.811],[69.328,-88.33],[72.938,-85.474]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.094,0.118,0.118,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","cix":2,"ix":6},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2}],"ip":0,"op":250,"st":0},{"ind":5,"ty":4,"nm":"Layer 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[175,175,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.153,0.466],[0.317,0.344],[0.427,0.224],[0.925,-0.308],[0.486,-0.83],[0.834,-1.428],[0.015,-0.491],[-0.153,-0.466],[-0.317,-0.344],[-0.427,-0.224],[-0.925,0.308],[-0.485,0.83],[-0.835,1.428],[-0.015,0.491]],"o":[[-0.115,-0.463],[-0.258,-0.395],[-0.842,-0.433],[-0.897,0.299],[-0.835,1.428],[-0.264,0.427],[-0.098,0.47],[0.115,0.463],[0.258,0.395],[0.842,0.433],[0.897,-0.299],[0.834,-1.428],[0.264,-0.427],[0.098,-0.47]],"v":[[71.277,54.46],[70.629,53.25],[69.601,52.321],[66.819,51.983],[64.679,53.66],[62.175,57.942],[61.756,59.319],[61.838,60.724],[62.486,61.935],[63.514,62.864],[66.296,63.201],[68.436,61.525],[70.94,57.242],[71.359,55.865]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":40,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.294,6.39],[1.975,0.413],[0.401,-1.98],[0.915,-2.922],[0.255,-0.703],[0.123,-0.322],[0.011,-0.029],[0.066,-0.152],[0.796,-1.332],[-1.709,-0.878],[-1.036,1.734]],"o":[[0.374,-1.846],[-1.834,-0.383],[-0.607,2.999],[-0.223,0.714],[-0.118,0.324],[-0.014,0.034],[-0.064,0.153],[-0.617,1.423],[-0.967,1.619],[1.766,0.908],[3.373,-5.645]],"v":[[81.84,29.59],[79.242,25.203],[74.854,27.801],[72.663,36.713],[71.947,38.84],[71.583,39.808],[71.553,39.886],[71.357,40.344],[69.238,44.477],[70.577,49.399],[75.499,48.06]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":40,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.49,-0.3],[16.6,0],[8.24,2.64],[0,38.55],[-12.14,14.86],[3.91,-3.72],[0,-24.66],[-34.9,-11.07],[-9.13,0],[-13.15,8.13],[-1.51,1.05],[-4.93,6.07]],"o":[[-13.16,8.13],[-9.13,0],[-34.9,-11.06],[0,-20.69],[-4.56,2.93],[-16.58,15.73],[0,38.56],[8.25,2.64],[16.6,0],[1.57,-0.97],[6.4,-4.54],[-0.48,0.32]],"v":[[70.61,69.64],[25.35,82.45],[-0.82,78.39],[-60.99,-3.89],[-41.59,-58.41],[-54.32,-48.41],[-81.24,14.22],[-21.07,96.51],[5.1,100.57],[50.36,87.76],[54.98,84.71],[72.06,68.71]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.31,0.341,0.373,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":8,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2}],"ip":0,"op":250,"st":0},{"ind":6,"ty":4,"nm":"Layer 5","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[180.095,189.224,0],"ix":2,"l":2},"a":{"a":0,"k":[5.095,14.224,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-7.851],[22.058,-15.64],[1.57,-0.976],[16.6,0],[8.247,2.637],[0,38.552],[-16.586,15.732],[-23.018,0],[-9.009,-3.186],[-7.424,-27.378]],"o":[[0,29.101],[-1.509,1.052],[-13.155,8.125],[-9.131,0],[-34.893,-11.067],[0,-24.665],[15.488,-14.695],[10.091,0],[26.525,9.375],[1.966,7.226]],"v":[[91.429,14.224],[54.98,84.712],[50.361,87.761],[5.102,100.566],[-21.072,96.511],[-81.24,14.224],[-54.319,-48.413],[5.102,-72.117],[33.898,-67.194],[88.41,-8.459]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.443,0.847,0.973,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1}],"ip":0,"op":250,"st":0},{"ind":7,"ty":4,"nm":"Layer 3","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":0,"s":[175,175,0],"to":[77.368,77.368,0],"ti":[-77.368,-77.368,0]},{"t":50,"s":[639.207,639.206,0]}],"ix":2,"l":2,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura 2');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"Ålosilo pli pura","np":34,"ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]},{"ty":5,"nm":"Ålosilo pli pura 2","np":34,"ix":2,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.175,-0.68],[-1.35,5.542],[3.442,0.678],[1.532,6.323],[0.429,-1.453],[0.813,0.741],[-1.533,1.666],[0.946,0.97],[1.17,-0.061],[1.659,5.075],[-1.422,-1.265],[-0.633,0.115],[-0.357,0.875],[0.096,0.217],[-1.792,0.912],[-1.09,-1.404],[-2.627,-2.337],[-0.51,-2.031],[-5.345,-2.847],[-1.399,0.001],[-0.218,7.591],[3.597,2.499],[-4.315,4.532],[-0.309,1.936],[-4.498,0.487],[-0.284,0.995],[-2.071,3.746],[2.628,0.239],[5.366,0.031],[0.925,-2.394],[6.233,1.08],[2.51,-1.896],[-1.048,-1.024],[0.124,-3.955],[2.345,0.57],[-0.756,2.008],[-0.164,0.826],[6.119,0.664],[1.014,-1.207],[-0.843,-1.133],[1.256,-2.075],[0.934,0.089],[-0.158,0.856],[2.771,2.361],[-6.053,5.378],[0.775,3.478],[1.139,0.27],[0.489,-1.128],[3.138,-2.451],[0.217,0.41],[-0.72,3.021],[-0.007,1.381],[-1.845,0.255],[1.08,5.751],[-0.109,0.844],[3.659,0.618],[0.291,-1.749],[1.03,0.921],[3.742,-4.128],[-0.403,-1.332],[-1.23,-0.083],[-1.2,-0.318],[0.322,-2.49],[2.321,0.607],[0.388,-1.906],[0.255,-1.532],[0.705,0.596],[0.18,0.735],[2.931,-0.883],[0.966,-1.074],[0.264,-5.324],[1.032,-1.213],[1.302,0.469],[-0.2,1.091],[0.662,1.507],[1.224,-0.14],[-0.12,-0.735],[3.063,0.214],[0.985,-1.961],[-0.722,-1.41],[-0.801,-1.32],[0.652,-0.76],[0.892,0.445],[2.773,0.866],[-1.371,2.298],[0.92,2.308],[0.567,0.168],[0.025,-0.724],[2.851,1.113],[2.412,-0.099],[0,0],[-1.307,-1.452],[-5.417,-3.836],[-0.322,-3.4],[-3.242,-1.456],[-0.8,-1.754],[-0.465,-5.896],[0,0],[-5.875,3.044],[1.015,-1.665],[-2.393,-0.944],[-1.422,-1.482],[-1.375,0.279],[0.028,-4.546],[0.331,0.235],[1.316,-1.243],[-0.928,-1.073],[-4.967,-1.455],[-1.052,3.112],[2.749,0.612],[0.133,0.048],[-0.533,2.099],[-2.08,-0.462],[-0.057,-3.931],[-1.959,-0.619],[-1.261,1.165],[0.403,1.525],[-1.34,1.183]],"o":[[4.899,2.847],[-1.987,-3.013],[-6.589,-1.302],[-1.744,1.274],[-0.893,0.869],[0.128,-1.755],[0.887,-0.971],[-0.681,-0.693],[-4.987,0.288],[2.358,-0.575],[0.554,0.482],[0.398,-0.314],[-0.066,-0.211],[-0.704,-1.513],[1.828,-0.936],[2.174,2.826],[1.5,1.331],[1.508,5.986],[1.399,0.119],[8.158,-0.014],[0.15,-5.318],[-5.098,-3.529],[1.394,-1.539],[0.57,-3.389],[1.079,-0.116],[1.149,-4.101],[1.117,-2.021],[-5.336,-0.483],[-2.593,-0.022],[-2.526,6.598],[-2.797,-0.492],[-1.14,0.851],[3.53,3.446],[-0.062,2.014],[-2.218,-0.541],[0.296,-0.79],[1.187,-5.994],[-1.465,-0.161],[-1.213,1.442],[1.391,1.874],[-0.326,0.531],[-1.182,-0.107],[0.776,-4.149],[-6.29,-5.36],[2.8,-2.487],[-0.288,-1.266],[-1.398,-0.324],[-2.042,4.632],[-0.175,0.139],[-1.198,-2.26],[0.882,-1.327],[0.02,-1.694],[6.513,-0.898],[-0.15,-0.79],[0.407,-3.347],[-0.231,1.604],[-1.9,0.273],[-4.145,-3.71],[-0.899,0.984],[0.463,1.537],[1.26,0.089],[2.224,0.583],[-0.34,2.545],[-2.037,-0.529],[-0.321,1.514],[-0.561,0.248],[-0.813,-0.681],[0.901,-2.937],[-1.363,0.062],[-5.578,0.313],[-0.08,1.634],[-0.736,0.869],[-1.434,-0.517],[0.291,-1.532],[-0.379,-0.862],[-1.073,0.122],[0.605,3.84],[-2.333,-0.173],[-1.166,2.334],[0.692,1.368],[0.44,0.729],[-0.863,0.996],[-2.555,-1.252],[-2.791,-0.872],[1.214,-2.021],[-0.235,-0.585],[-0.88,-0.264],[-0.166,3.829],[-2.242,-0.878],[0,0],[-0.714,2.352],[4.469,4.94],[2.645,1.885],[0.334,3.521],[1.742,0.776],[2.299,5.026],[0,0],[5.402,0.646],[1.007,-0.526],[-2.138,3.499],[1.868,0.734],[0.783,0.807],[3.896,-0.775],[-0.398,-0.229],[-1.042,-0.765],[-1.134,1.062],[3.258,3.789],[2.749,0.805],[1.197,-3.534],[-0.139,-0.03],[-1.266,-0.445],[0.557,-2.135],[3.804,0.859],[0.028,1.863],[1.766,0.559],[1.617,-1.485],[-0.306,-1.139],[1.08,-0.948]],"v":[[-141.056,-48.169],[-132.569,-51.836],[-140.897,-57.086],[-149.017,-64.7],[-150.432,-60.116],[-152.977,-60.247],[-152.496,-65.511],[-151.787,-68.894],[-155.241,-69.548],[-164.526,-76.093],[-159.482,-73.752],[-157.68,-73.145],[-156.611,-74.901],[-156.87,-75.546],[-156.197,-79.604],[-151.803,-78.022],[-144.146,-70.764],[-140.883,-65.943],[-130.216,-52.984],[-126.02,-52.638],[-110.97,-66.653],[-118.039,-76.86],[-118.864,-84.95],[-116.851,-90.361],[-111.339,-97.692],[-109.462,-99.798],[-104.634,-111.529],[-106.643,-116.001],[-122.723,-116.716],[-128.31,-112.743],[-142.015,-106.086],[-150.138,-104.638],[-150.737,-101.918],[-148.837,-90.216],[-152.103,-85.324],[-152.4,-90.931],[-151.704,-93.373],[-158.509,-102.52],[-162.423,-101.473],[-161.745,-97.705],[-161.196,-91.785],[-162.433,-90.318],[-163.432,-92.247],[-167.958,-101.178],[-168.339,-113.339],[-165.412,-122],[-167.11,-125.23],[-169.554,-122.726],[-180.014,-117.434],[-181.394,-118.199],[-184.215,-125.305],[-183.916,-129.447],[-181.718,-133.079],[-174.834,-143.685],[-174.561,-146.2],[-180.306,-153.225],[-178.332,-149.524],[-182.207,-151.299],[-191.384,-150.797],[-192.835,-147.455],[-189.58,-146.144],[-185.8,-145.924],[-182.168,-141.411],[-186.602,-139.17],[-190.156,-136.448],[-190.938,-131.871],[-192.675,-131.447],[-192.697,-133.642],[-195.757,-136.714],[-199.358,-135.282],[-205.549,-129.319],[-207.326,-125.109],[-210.185,-123.743],[-211.069,-126.643],[-210.95,-131.231],[-213.022,-133.038],[-215.044,-131.137],[-219.413,-127.346],[-224.969,-123.947],[-222.054,-120.73],[-219.543,-116.831],[-219.401,-114.468],[-222.06,-114.544],[-229.086,-119.216],[-230.836,-124.068],[-229.799,-130.502],[-231.19,-131.918],[-232.409,-130.626],[-237.482,-127.939],[-244.548,-128.812],[-246.353,-127.008],[-244.108,-121.903],[-229.004,-109.056],[-224.116,-101.548],[-218.684,-94.077],[-214.907,-90.264],[-207.855,-75.245],[-206.047,-73.438],[-189.739,-71.855],[-187.902,-69.644],[-185.188,-64.178],[-180.102,-61.264],[-177.119,-60.248],[-171.552,-54.718],[-172.649,-55.357],[-175.976,-56.861],[-174.888,-53.166],[-163.066,-44.579],[-155.535,-45.641],[-160.963,-50.405],[-161.373,-50.501],[-163.945,-53.049],[-159.698,-55.525],[-150.459,-44.319],[-148.317,-40.209],[-143.016,-40.497],[-144.194,-44.91],[-144.589,-48.322]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.599,-1.792],[-0.41,-0.229],[-2.268,0.653],[-2.587,0.346],[0.783,0.892]],"o":[[-0.422,0.278],[1.778,0.981],[2.37,-0.683],[1.001,-0.134],[-1.476,-1.669]],"v":[[-126.603,-126.196],[-126.894,-124.882],[-121.669,-121.914],[-114.624,-124.513],[-113.869,-126.775]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.557,2.328],[-0.188,1.031],[-1.774,1.376],[1.594,3.731],[-1.37,1.683],[0.902,2.556],[-5.427,0.186],[-1.919,2.112],[1.737,6.022],[-1.262,1.346],[-3.989,4.025],[2.163,8.041],[0,0],[-0.042,-0.332],[0.37,-2.43],[4.189,1.039],[5.123,-3.978],[2.121,1.734],[1.653,-1.087],[2.653,0.106],[1.129,-1.768],[-3.56,-4.139],[0.315,-1.881],[0.323,-3.805],[-2.928,-2.783],[0.821,-1.074],[-2.008,-0.245],[-0.739,-2.441],[2.738,-1.22],[-1.987,-3.146],[4.01,0.087],[1.248,0.234],[0.873,0.813],[-0.032,2.116],[3.117,0.317],[5.05,-3.447],[2.594,4.646],[2.979,-0.256],[0.659,-1.84],[-9.09,-2.271],[-0.42,-2.641],[2.009,-1.322],[1.675,1.421],[0.56,1.332],[3.594,-0.45],[-0.002,2.267],[1.76,0.782],[1.026,-0.821],[-3.777,-3.391],[-1.148,-3.309],[-2.282,-2.898],[-0.714,-4.033],[0,0],[-0.549,0.127],[-0.006,0.066],[-0.151,-0.175],[-1.372,-3.086],[-1.893,-0.396],[-5.26,-3.438],[-1.122,0.254],[0,0],[2.807,3.169],[-2.371,1.672],[-4.595,1.114],[1.628,6.938],[1.127,0.017],[0.266,-0.772],[0.55,-1.598],[0.922,0.102],[-0.145,0.796]],"o":[[0.188,-1.031],[0.973,-2.081],[3.331,-2.584],[-0.65,-1.507],[1.847,-2.257],[-1.732,-4.882],[2.93,-0.099],[4.967,-5.473],[-0.505,-1.748],[3.893,-4.134],[5.051,-5.099],[0,0],[0.048,0.301],[0.431,3.111],[-0.655,4.269],[-5.811,-1.43],[-1.895,1.473],[-1.506,-1.229],[-2.16,1.425],[-2.261,-0.1],[-2.615,4.072],[1.193,1.398],[-0.673,4.046],[-0.372,4.348],[0.753,0.717],[-3.948,5.153],[2.122,0.251],[0.818,2.688],[-3.028,1.341],[2.071,3.278],[-1.248,-0.029],[-0.861,-0.813],[-1.186,-1.79],[0.046,-3.853],[-6.523,-0.657],[-4.483,3.061],[-1.005,-1.79],[-2.888,0.25],[-3.204,8.842],[2.55,0.631],[0.438,2.695],[-2.039,1.341],[-1.175,-1.006],[-1.444,-3.375],[-1.791,0.225],[-0.011,-0.929],[-1.308,-0.584],[-3.276,2.614],[2.392,2.15],[1.317,3.791],[2.704,3.428],[0,0],[0.537,-0.127],[-0.012,-0.072],[0.054,0.187],[3.032,1.101],[0.788,1.766],[5.926,1.243],[1.012,0.662],[0,0],[-2.988,-3.012],[-1.765,-1.982],[3.62,-2.56],[6.748,-1.652],[-0.18,-0.772],[-0.971,-0.005],[-0.556,1.604],[-0.212,0.597],[-1.097,-0.12],[0.454,-2.358]],"v":[[-74.79,-12.126],[-74.232,-15.214],[-69.971,-20.331],[-67.755,-29.763],[-67.956,-34.55],[-67.364,-41.767],[-62.595,-48.416],[-55.549,-51.739],[-53.833,-69.383],[-53.099,-73.441],[-41.668,-86.053],[-35.199,-104.63],[-40.783,-110.214],[-40.652,-109.285],[-43.184,-102.343],[-49.248,-98.424],[-65.831,-96.009],[-72.089,-95.883],[-76.732,-96.011],[-83.945,-93.882],[-88.729,-90.893],[-87.39,-78.908],[-84.614,-74.334],[-83.896,-62.62],[-80.016,-52.464],[-78.614,-49.71],[-76.018,-46.499],[-70.305,-44.104],[-73.699,-38.035],[-75.483,-31.673],[-78.931,-26.418],[-82.662,-27.096],[-85.265,-29.529],[-87.46,-35.406],[-92.846,-40.466],[-109.715,-34.668],[-117.721,-36.469],[-121.05,-41.597],[-123.135,-36.259],[-115.648,-22.266],[-111.034,-17.314],[-114.03,-11.209],[-119.811,-12.464],[-122.974,-15.832],[-130.277,-20.057],[-133.814,-22.653],[-133.896,-25.414],[-137.352,-24.38],[-136.428,-12.895],[-129.79,-5.943],[-123.197,3.68],[-118.202,14.407],[-115.793,16.817],[-114.164,16.442],[-114.17,16.231],[-113.863,16.779],[-107.098,22.748],[-102.681,25.74],[-85.387,31.06],[-82.084,31.238],[-80.877,30.031],[-89.78,20.947],[-90.479,14.116],[-79.167,6.877],[-69.553,-9.315],[-70.793,-11.195],[-72.495,-9.505],[-73.947,-4.632],[-75.262,-3.208],[-76.43,-5.124]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","cix":2,"ix":3},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.307,1.452],[5.417,3.836],[0.323,3.4],[3.242,1.456],[0.8,1.754],[0.465,5.896],[0,0],[5.875,-3.044],[-1.015,1.665],[2.393,0.944],[1.422,1.482],[1.375,-0.279],[-0.028,4.546],[-0.331,-0.235],[-1.315,1.243],[0.928,1.072],[4.967,1.455],[1.052,-3.112],[-2.749,-0.612],[-0.133,-0.048],[0.532,-2.099],[2.08,0.462],[0.057,3.931],[1.959,0.619],[1.261,-1.165],[-0.403,-1.525],[1.34,-1.183],[1.175,0.68],[1.35,-5.542],[-3.442,-0.678],[-1.532,-6.323],[-0.429,1.453],[-0.813,-0.741],[1.533,-1.666],[-0.946,-0.97],[-1.17,0.061],[-1.659,-5.075],[1.422,1.265],[0.633,-0.115],[0.357,-0.875],[-0.096,-0.217],[1.792,-0.912],[1.09,1.404],[2.627,2.337],[0.511,2.031],[5.346,2.847],[1.399,-0.001],[0.218,-7.591],[-3.597,-2.499],[4.315,-4.532],[0.309,-1.936],[4.498,-0.487],[0.284,-0.995],[2.071,-3.746],[-2.629,-0.239],[-5.366,-0.031],[-0.925,2.395],[-6.233,-1.08],[-2.51,1.896],[1.048,1.024],[-0.124,3.955],[-2.345,-0.571],[0.756,-2.008],[0.164,-0.826],[-6.119,-0.664],[-1.014,1.207],[0.843,1.133],[-1.256,2.075],[-0.934,-0.089],[0.158,-0.856],[-2.771,-2.361],[6.052,-5.378],[-0.775,-3.478],[-1.139,-0.27],[-0.489,1.128],[-3.138,2.451],[-0.217,-0.41],[0.72,-3.021],[0.007,-1.381],[1.845,-0.255],[-1.08,-5.751],[0.109,-0.844],[-3.659,-0.618],[-0.291,1.749],[-1.03,-0.922],[-3.742,4.128],[0.403,1.332],[1.23,0.083],[1.2,0.318],[-0.322,2.49],[-2.321,-0.607],[-0.388,1.906],[-0.255,1.532],[-0.705,-0.596],[-0.18,-0.735],[-2.931,0.883],[-0.966,1.074],[-0.264,5.324],[-1.032,1.213],[-1.302,-0.469],[0.2,-1.091],[-0.662,-1.507],[-1.224,0.14],[0.12,0.735],[-3.063,-0.214],[-0.985,1.961],[0.722,1.41],[0.801,1.32],[-0.652,0.76],[-0.892,-0.445],[-2.773,-0.866],[1.371,-2.298],[-0.92,-2.308],[-0.567,-0.168],[-0.025,0.724],[-2.851,-1.113],[-2.412,0.099],[0,0]],"o":[[-4.469,-4.94],[-2.645,-1.885],[-0.334,-3.521],[-1.742,-0.776],[-2.299,-5.026],[0,0],[-5.402,-0.646],[-1.007,0.525],[2.138,-3.499],[-1.868,-0.734],[-0.783,-0.807],[-3.896,0.775],[0.398,0.229],[1.042,0.765],[1.135,-1.062],[-3.258,-3.789],[-2.749,-0.805],[-1.197,3.534],[0.139,0.03],[1.266,0.445],[-0.557,2.135],[-3.804,-0.859],[-0.028,-1.863],[-1.766,-0.559],[-1.617,1.485],[0.306,1.139],[-1.08,0.948],[-4.899,-2.847],[1.987,3.013],[6.589,1.302],[1.744,-1.274],[0.893,-0.869],[-0.128,1.755],[-0.887,0.971],[0.681,0.693],[4.987,-0.288],[-2.358,0.575],[-0.554,-0.482],[-0.398,0.314],[0.066,0.211],[0.704,1.513],[-1.828,0.936],[-2.174,-2.826],[-1.5,-1.331],[-1.508,-5.986],[-1.399,-0.119],[-8.158,0.014],[-0.15,5.318],[5.098,3.529],[-1.394,1.539],[-0.57,3.389],[-1.079,0.116],[-1.149,4.101],[-1.117,2.021],[5.336,0.483],[2.593,0.022],[2.526,-6.598],[2.797,0.492],[1.14,-0.851],[-3.53,-3.446],[0.062,-2.014],[2.218,0.541],[-0.296,0.79],[-1.187,5.994],[1.465,0.161],[1.213,-1.442],[-1.391,-1.874],[0.326,-0.531],[1.182,0.107],[-0.776,4.149],[6.29,5.36],[-2.8,2.487],[0.288,1.266],[1.398,0.324],[2.042,-4.632],[0.175,-0.139],[1.198,2.26],[-0.882,1.327],[-0.02,1.694],[-6.513,0.898],[0.15,0.79],[-0.407,3.347],[0.231,-1.604],[1.9,-0.273],[4.145,3.71],[0.899,-0.984],[-0.463,-1.537],[-1.26,-0.089],[-2.224,-0.583],[0.34,-2.545],[2.037,0.529],[0.321,-1.514],[0.561,-0.248],[0.813,0.681],[-0.901,2.937],[1.363,-0.062],[5.578,-0.313],[0.08,-1.634],[0.736,-0.869],[1.434,0.517],[-0.291,1.532],[0.379,0.862],[1.073,-0.122],[-0.605,-3.84],[2.333,0.173],[1.166,-2.334],[-0.692,-1.368],[-0.44,-0.729],[0.863,-0.996],[2.555,1.252],[2.791,0.872],[-1.214,2.021],[0.235,0.585],[0.88,0.264],[0.166,-3.829],[2.242,0.878],[0,0],[0.714,-2.352]],"v":[[141.726,72.903],[126.622,60.057],[121.733,52.549],[116.302,45.077],[112.525,41.264],[105.472,26.245],[103.665,24.438],[87.357,22.856],[85.52,20.644],[82.806,15.178],[77.72,12.265],[74.736,11.249],[69.17,5.719],[70.267,6.357],[73.594,7.861],[72.506,4.166],[60.684,-4.421],[53.153,-3.359],[58.581,1.406],[58.991,1.502],[61.563,4.05],[57.316,6.526],[48.077,-4.68],[45.934,-8.791],[40.634,-8.502],[41.812,-4.09],[42.207,-0.678],[38.674,-0.831],[30.187,2.837],[38.515,8.087],[46.635,15.7],[48.05,11.117],[50.595,11.247],[50.114,16.511],[49.405,19.894],[52.859,20.548],[62.144,27.093],[57.1,24.753],[55.298,24.145],[54.229,25.901],[54.488,26.546],[53.815,30.604],[49.421,29.023],[41.764,21.764],[38.5,16.944],[27.834,3.984],[23.638,3.639],[8.588,17.653],[15.657,27.86],[16.482,35.951],[14.469,41.361],[8.957,48.692],[7.08,50.798],[2.252,62.529],[4.261,67.001],[20.341,67.716],[25.928,63.744],[39.633,57.086],[47.756,55.638],[48.355,52.918],[46.455,41.217],[49.721,36.324],[50.018,41.931],[49.322,44.374],[56.127,53.52],[60.041,52.473],[59.363,48.705],[58.814,42.785],[60.051,41.319],[61.05,43.247],[65.576,52.179],[65.957,64.339],[63.03,73],[64.728,76.231],[67.172,73.726],[77.632,68.435],[79.012,69.199],[81.833,76.305],[81.534,80.448],[79.336,84.079],[72.452,94.686],[72.179,97.2],[77.924,104.225],[75.95,100.525],[79.825,102.3],[89.002,101.797],[90.453,98.455],[87.198,97.144],[83.418,96.924],[79.786,92.412],[84.22,90.171],[87.774,87.448],[88.556,82.871],[90.293,82.447],[90.315,84.642],[93.375,87.714],[96.976,86.282],[103.167,80.319],[104.944,76.109],[107.803,74.744],[108.687,77.643],[108.568,82.232],[110.64,84.038],[112.662,82.137],[117.031,78.347],[122.587,74.947],[119.672,71.73],[117.161,67.831],[117.019,65.468],[119.678,65.544],[126.704,70.216],[128.453,75.068],[127.417,81.503],[128.808,82.918],[130.027,81.627],[135.1,78.939],[142.166,79.813],[143.971,78.008]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","cix":2,"ix":4},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.41,0.229],[2.268,-0.653],[2.587,-0.346],[-0.783,-0.892],[-1.599,1.792]],"o":[[-1.778,-0.981],[-2.37,0.683],[-1.001,0.134],[1.476,1.669],[0.422,-0.278]],"v":[[24.512,75.882],[19.287,72.914],[12.242,75.514],[11.487,77.775],[24.221,77.197]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","cix":2,"ix":5},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-2.594,-4.646],[-2.979,0.256],[-0.659,1.84],[9.09,2.271],[0.42,2.641],[-2.009,1.322],[-1.675,-1.421],[-0.56,-1.332],[-3.594,0.45],[0.002,-2.267],[-1.76,-0.782],[-1.026,0.821],[3.777,3.391],[1.148,3.309],[2.282,2.898],[0.714,4.033],[0,0],[0.549,-0.127],[0.006,-0.066],[0.151,0.175],[1.372,3.086],[1.893,0.396],[5.26,3.438],[1.122,-0.254],[0,0],[-2.807,-3.169],[2.371,-1.672],[4.595,-1.114],[-1.628,-6.938],[-1.127,-0.017],[-0.266,0.772],[-0.55,1.598],[-0.922,-0.102],[0.145,-0.796],[0.557,-2.328],[0.188,-1.031],[1.774,-1.376],[-1.594,-3.731],[1.37,-1.684],[-0.902,-2.556],[5.427,-0.186],[1.919,-2.112],[-1.737,-6.022],[1.261,-1.346],[3.989,-4.025],[-2.163,-8.041],[0,0],[0.042,0.332],[-0.37,2.43],[-4.189,-1.039],[-5.123,3.978],[-2.121,-1.735],[-1.653,1.087],[-2.653,-0.106],[-1.129,1.768],[3.56,4.139],[-0.315,1.881],[-0.323,3.805],[2.928,2.783],[-0.821,1.074],[2.008,0.245],[0.739,2.441],[-2.739,1.22],[1.987,3.146],[-4.01,-0.087],[-1.248,-0.234],[-0.873,-0.813],[0.032,-2.116],[-3.117,-0.317],[-5.05,3.447]],"o":[[1.005,1.79],[2.888,-0.25],[3.204,-8.842],[-2.55,-0.631],[-0.438,-2.695],[2.039,-1.341],[1.175,1.006],[1.444,3.375],[1.791,-0.225],[0.011,0.929],[1.308,0.584],[3.276,-2.614],[-2.392,-2.15],[-1.317,-3.791],[-2.704,-3.428],[0,0],[-0.537,0.127],[0.012,0.072],[-0.054,-0.187],[-3.032,-1.101],[-0.788,-1.766],[-5.926,-1.243],[-1.012,-0.662],[0,0],[2.988,3.012],[1.765,1.982],[-3.62,2.56],[-6.748,1.652],[0.18,0.772],[0.971,0.005],[0.556,-1.604],[0.212,-0.597],[1.097,0.12],[-0.454,2.358],[-0.188,1.031],[-0.973,2.081],[-3.331,2.584],[0.65,1.507],[-1.847,2.257],[1.732,4.882],[-2.93,0.099],[-4.967,5.473],[0.505,1.748],[-3.893,4.134],[-5.051,5.099],[0,0],[-0.048,-0.301],[-0.431,-3.111],[0.655,-4.269],[5.811,1.43],[1.895,-1.473],[1.506,1.229],[2.16,-1.425],[2.261,0.1],[2.615,-4.072],[-1.192,-1.398],[0.673,-4.046],[0.372,-4.348],[-0.753,-0.717],[3.948,-5.153],[-2.122,-0.251],[-0.818,-2.688],[3.028,-1.341],[-2.071,-3.278],[1.248,0.029],[0.861,0.813],[1.186,1.79],[-0.046,3.853],[6.523,0.657],[4.483,-3.061]],"v":[[15.339,-12.531],[18.668,-7.403],[20.753,-12.741],[13.266,-26.734],[8.652,-31.686],[11.648,-37.79],[17.429,-36.536],[20.591,-33.168],[27.895,-28.942],[31.432,-26.347],[31.514,-23.585],[34.97,-24.62],[34.046,-36.105],[27.408,-43.057],[20.815,-52.679],[15.82,-63.407],[13.411,-65.817],[11.782,-65.441],[11.788,-65.23],[11.481,-65.779],[4.716,-71.747],[0.299,-74.74],[-16.995,-80.06],[-20.299,-80.238],[-21.506,-79.031],[-12.603,-69.947],[-11.903,-63.116],[-23.215,-55.876],[-32.829,-39.685],[-31.589,-37.805],[-29.887,-39.494],[-28.435,-44.367],[-27.12,-45.792],[-25.952,-43.875],[-27.592,-36.874],[-28.15,-33.786],[-32.411,-28.669],[-34.627,-19.237],[-34.426,-14.45],[-35.018,-7.232],[-39.787,-0.583],[-46.833,2.739],[-48.549,20.383],[-49.283,24.441],[-60.714,37.053],[-67.183,55.63],[-61.599,61.214],[-61.73,60.286],[-59.198,53.343],[-53.134,49.425],[-36.551,47.01],[-30.293,46.883],[-25.65,47.012],[-18.437,44.883],[-13.653,41.893],[-14.992,29.908],[-17.768,25.335],[-18.486,13.62],[-22.366,3.464],[-23.768,0.71],[-26.364,-2.501],[-32.078,-4.896],[-28.683,-10.964],[-26.899,-17.327],[-23.451,-22.582],[-19.72,-21.904],[-17.117,-19.471],[-14.922,-13.594],[-9.536,-8.534],[7.333,-14.332]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","cix":2,"ix":6},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-1.175,-0.68],[-1.35,5.542],[3.442,0.678],[1.532,6.323],[0.429,-1.453],[0.813,0.741],[-1.533,1.666],[0.946,0.97],[1.17,-0.061],[1.659,5.075],[-1.422,-1.265],[-0.633,0.115],[-0.357,0.875],[0.096,0.217],[-1.792,0.912],[-1.09,-1.404],[-2.627,-2.337],[-0.511,-2.031],[-5.346,-2.847],[-1.399,0.001],[-0.218,7.591],[3.597,2.499],[-4.315,4.532],[-0.309,1.936],[-4.498,0.487],[-0.284,0.995],[-2.071,3.746],[2.629,0.239],[5.366,0.031],[0.925,-2.395],[6.233,1.08],[2.51,-1.896],[-1.048,-1.024],[0.124,-3.955],[2.345,0.571],[-0.756,2.008],[-0.164,0.826],[6.119,0.664],[1.014,-1.207],[-0.843,-1.133],[1.256,-2.075],[0.934,0.089],[-0.158,0.856],[2.771,2.361],[-6.053,5.378],[0.775,3.478],[1.139,0.27],[0.489,-1.128],[3.138,-2.451],[0.217,0.41],[-0.72,3.021],[-0.007,1.381],[-1.845,0.255],[1.08,5.751],[-0.109,0.844],[3.659,0.618],[0.291,-1.749],[1.03,0.922],[3.742,-4.128],[-0.403,-1.332],[-1.23,-0.083],[-1.2,-0.318],[0.322,-2.49],[2.321,0.607],[0.388,-1.906],[0.255,-1.532],[0.705,0.596],[0.18,0.735],[2.931,-0.883],[0.966,-1.074],[0.264,-5.324],[1.032,-1.213],[1.302,0.469],[-0.2,1.092],[0.662,1.507],[1.224,-0.14],[-0.12,-0.735],[3.063,0.214],[0.985,-1.961],[-0.722,-1.41],[-0.801,-1.32],[0.652,-0.76],[0.892,0.445],[2.773,0.866],[-1.371,2.299],[0.92,2.308],[0.567,0.168],[0.025,-0.724],[2.851,1.113],[2.412,-0.099],[0,0],[-1.307,-1.452],[-5.417,-3.836],[-0.323,-3.4],[-3.242,-1.456],[-0.8,-1.754],[-0.465,-5.896],[0,0],[-5.875,3.044],[1.015,-1.665],[-2.393,-0.944],[-1.422,-1.482],[-1.375,0.279],[0.028,-4.546],[0.331,0.235],[1.315,-1.243],[-0.928,-1.072],[-4.967,-1.455],[-1.052,3.112],[2.749,0.612],[0.133,0.048],[-0.532,2.099],[-2.08,-0.462],[-0.057,-3.931],[-1.959,-0.619],[-1.261,1.165],[0.403,1.525],[-1.34,1.183]],"o":[[4.899,2.847],[-1.987,-3.013],[-6.589,-1.302],[-1.744,1.274],[-0.893,0.869],[0.128,-1.755],[0.887,-0.971],[-0.681,-0.693],[-4.987,0.288],[2.358,-0.575],[0.554,0.482],[0.398,-0.314],[-0.066,-0.211],[-0.704,-1.513],[1.828,-0.936],[2.174,2.826],[1.5,1.331],[1.508,5.986],[1.399,0.119],[8.158,-0.014],[0.15,-5.318],[-5.098,-3.529],[1.394,-1.539],[0.57,-3.389],[1.079,-0.116],[1.149,-4.101],[1.117,-2.021],[-5.336,-0.483],[-2.593,-0.022],[-2.526,6.598],[-2.797,-0.492],[-1.14,0.851],[3.53,3.446],[-0.062,2.014],[-2.218,-0.541],[0.296,-0.79],[1.187,-5.994],[-1.465,-0.161],[-1.213,1.442],[1.391,1.874],[-0.326,0.531],[-1.182,-0.107],[0.776,-4.149],[-6.29,-5.36],[2.8,-2.487],[-0.288,-1.266],[-1.398,-0.324],[-2.042,4.632],[-0.175,0.139],[-1.198,-2.26],[0.882,-1.327],[0.02,-1.694],[6.513,-0.898],[-0.15,-0.79],[0.407,-3.347],[-0.231,1.604],[-1.9,0.273],[-4.145,-3.71],[-0.899,0.984],[0.463,1.537],[1.26,0.089],[2.224,0.583],[-0.34,2.545],[-2.037,-0.529],[-0.321,1.514],[-0.561,0.248],[-0.813,-0.681],[0.901,-2.937],[-1.363,0.062],[-5.577,0.313],[-0.08,1.634],[-0.736,0.869],[-1.434,-0.517],[0.291,-1.532],[-0.379,-0.862],[-1.073,0.122],[0.605,3.84],[-2.333,-0.173],[-1.166,2.334],[0.692,1.368],[0.44,0.729],[-0.863,0.996],[-2.555,-1.252],[-2.791,-0.872],[1.214,-2.021],[-0.235,-0.585],[-0.88,-0.264],[-0.166,3.829],[-2.242,-0.878],[0,0],[-0.714,2.352],[4.469,4.94],[2.645,1.885],[0.334,3.521],[1.742,0.776],[2.299,5.026],[0,0],[5.402,0.646],[1.007,-0.526],[-2.138,3.499],[1.868,0.734],[0.783,0.807],[3.896,-0.775],[-0.398,-0.229],[-1.042,-0.765],[-1.135,1.062],[3.258,3.789],[2.749,0.805],[1.197,-3.534],[-0.139,-0.03],[-1.266,-0.445],[0.557,-2.135],[3.804,0.859],[0.028,1.863],[1.766,0.559],[1.617,-1.485],[-0.306,-1.139],[1.08,-0.948]],"v":[[-373.159,-280.272],[-364.672,-283.939],[-373,-289.189],[-381.121,-296.803],[-382.536,-292.219],[-385.08,-292.35],[-384.599,-297.614],[-383.89,-300.997],[-387.344,-301.651],[-396.63,-308.196],[-391.585,-305.856],[-389.783,-305.248],[-388.714,-307.004],[-388.973,-307.649],[-388.3,-311.707],[-383.906,-310.125],[-376.249,-302.867],[-372.986,-298.047],[-362.32,-285.087],[-358.124,-284.741],[-343.073,-298.756],[-350.142,-308.963],[-350.967,-317.054],[-348.954,-322.464],[-343.442,-329.795],[-341.565,-331.901],[-336.737,-343.632],[-338.747,-348.104],[-354.826,-348.819],[-360.413,-344.846],[-374.118,-338.189],[-382.241,-336.741],[-382.841,-334.021],[-380.94,-322.32],[-384.207,-317.427],[-384.503,-323.034],[-383.807,-325.476],[-390.612,-334.623],[-394.526,-333.576],[-393.848,-329.808],[-393.299,-323.888],[-394.536,-322.422],[-395.536,-324.35],[-400.061,-333.281],[-400.442,-345.442],[-397.516,-354.103],[-399.213,-357.334],[-401.657,-354.829],[-412.117,-349.538],[-413.497,-350.302],[-416.318,-357.408],[-416.019,-361.551],[-413.821,-365.182],[-406.938,-375.788],[-406.664,-378.303],[-412.409,-385.328],[-410.435,-381.628],[-414.31,-383.403],[-423.488,-382.9],[-424.938,-379.558],[-421.683,-378.247],[-417.903,-378.027],[-414.271,-373.515],[-418.705,-371.274],[-422.259,-368.551],[-423.041,-363.974],[-424.778,-363.55],[-424.8,-365.745],[-427.86,-368.817],[-431.461,-367.385],[-437.653,-361.422],[-439.429,-357.212],[-442.288,-355.847],[-443.172,-358.746],[-443.053,-363.334],[-445.126,-365.141],[-447.147,-363.24],[-451.516,-359.45],[-457.072,-356.05],[-454.157,-352.833],[-451.646,-348.934],[-451.504,-346.571],[-454.163,-346.647],[-461.189,-351.319],[-462.939,-356.171],[-461.902,-362.605],[-463.293,-364.021],[-464.512,-362.73],[-469.586,-360.042],[-476.651,-360.916],[-478.456,-359.111],[-476.211,-354.006],[-461.108,-341.16],[-456.219,-333.651],[-450.787,-326.18],[-447.01,-322.367],[-439.958,-307.348],[-438.151,-305.541],[-421.843,-303.958],[-420.006,-301.747],[-417.292,-296.281],[-412.205,-293.368],[-409.222,-292.351],[-403.656,-286.822],[-404.753,-287.46],[-408.079,-288.964],[-406.991,-285.269],[-395.17,-276.682],[-387.638,-277.744],[-393.066,-282.508],[-393.476,-282.604],[-396.048,-285.152],[-391.801,-287.628],[-382.562,-276.422],[-380.42,-272.312],[-375.12,-272.601],[-376.297,-277.013],[-376.692,-280.425]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","cix":2,"ix":7},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.599,-1.792],[-0.41,-0.229],[-2.268,0.653],[-2.587,0.346],[0.783,0.892]],"o":[[-0.422,0.278],[1.778,0.981],[2.37,-0.683],[1.001,-0.134],[-1.476,-1.669]],"v":[[-358.707,-358.3],[-358.997,-356.985],[-353.772,-354.017],[-346.728,-356.616],[-345.972,-358.878]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","cix":2,"ix":8},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.557,2.328],[-0.188,1.031],[-1.774,1.376],[1.594,3.731],[-1.37,1.684],[0.902,2.556],[-5.427,0.186],[-1.919,2.112],[1.737,6.022],[-1.261,1.346],[-3.989,4.025],[2.163,8.041],[0,0],[-0.042,-0.332],[0.37,-2.43],[4.189,1.039],[5.123,-3.978],[2.121,1.735],[1.653,-1.087],[2.653,0.106],[1.129,-1.768],[-3.56,-4.139],[0.315,-1.881],[0.323,-3.805],[-2.928,-2.783],[0.821,-1.074],[-2.008,-0.245],[-0.739,-2.441],[2.738,-1.22],[-1.987,-3.146],[4.01,0.087],[1.248,0.234],[0.873,0.813],[-0.032,2.116],[3.117,0.317],[5.05,-3.447],[2.594,4.646],[2.979,-0.256],[0.659,-1.84],[-9.09,-2.271],[-0.42,-2.641],[2.009,-1.322],[1.675,1.421],[0.56,1.332],[3.594,-0.45],[-0.002,2.267],[1.76,0.782],[1.026,-0.821],[-3.777,-3.391],[-1.149,-3.309],[-2.282,-2.898],[-0.714,-4.033],[0,0],[-0.549,0.127],[-0.006,0.066],[-0.151,-0.175],[-1.372,-3.086],[-1.893,-0.396],[-5.26,-3.438],[-1.122,0.254],[0,0],[2.807,3.169],[-2.371,1.672],[-4.595,1.114],[1.628,6.938],[1.128,0.017],[0.266,-0.772],[0.55,-1.598],[0.922,0.102],[-0.145,0.796]],"o":[[0.188,-1.031],[0.973,-2.081],[3.331,-2.584],[-0.65,-1.507],[1.847,-2.257],[-1.732,-4.882],[2.93,-0.099],[4.967,-5.473],[-0.505,-1.748],[3.893,-4.134],[5.051,-5.099],[0,0],[0.048,0.301],[0.431,3.111],[-0.655,4.269],[-5.811,-1.43],[-1.895,1.473],[-1.506,-1.229],[-2.16,1.425],[-2.261,-0.1],[-2.615,4.072],[1.192,1.398],[-0.673,4.046],[-0.372,4.348],[0.753,0.717],[-3.948,5.153],[2.122,0.251],[0.818,2.688],[-3.028,1.341],[2.071,3.278],[-1.248,-0.029],[-0.861,-0.813],[-1.186,-1.79],[0.046,-3.853],[-6.523,-0.657],[-4.483,3.061],[-1.005,-1.79],[-2.888,0.25],[-3.204,8.842],[2.55,0.631],[0.438,2.695],[-2.039,1.34],[-1.175,-1.006],[-1.444,-3.375],[-1.791,0.225],[-0.011,-0.929],[-1.308,-0.584],[-3.276,2.614],[2.392,2.15],[1.317,3.791],[2.704,3.428],[0,0],[0.537,-0.127],[-0.012,-0.072],[0.054,0.187],[3.032,1.101],[0.788,1.766],[5.926,1.243],[1.012,0.662],[0,0],[-2.988,-3.012],[-1.765,-1.982],[3.62,-2.56],[6.748,-1.652],[-0.18,-0.772],[-0.971,-0.005],[-0.556,1.604],[-0.212,0.597],[-1.097,-0.12],[0.454,-2.358]],"v":[[-306.893,-244.229],[-306.336,-247.317],[-302.074,-252.434],[-299.859,-261.866],[-300.059,-266.653],[-299.468,-273.871],[-294.698,-280.519],[-287.653,-283.842],[-285.936,-301.486],[-285.203,-305.544],[-273.771,-318.156],[-267.303,-336.733],[-272.887,-342.317],[-272.755,-341.388],[-275.288,-334.446],[-281.351,-330.527],[-297.934,-328.112],[-304.193,-327.986],[-308.835,-328.114],[-316.048,-325.985],[-320.832,-322.996],[-319.493,-311.011],[-316.718,-306.437],[-315.999,-294.723],[-312.12,-284.567],[-310.717,-281.813],[-308.121,-278.602],[-302.408,-276.207],[-305.802,-270.139],[-307.587,-263.776],[-311.034,-258.521],[-314.766,-259.199],[-317.368,-261.632],[-319.563,-267.509],[-324.949,-272.569],[-341.819,-266.771],[-349.824,-268.572],[-353.154,-273.7],[-355.239,-268.362],[-347.751,-254.369],[-343.137,-249.417],[-346.133,-243.313],[-351.914,-244.567],[-355.077,-247.935],[-362.38,-252.161],[-365.917,-254.756],[-365.999,-257.517],[-369.455,-256.483],[-368.531,-244.998],[-361.893,-238.046],[-355.3,-228.424],[-350.305,-217.696],[-347.896,-215.286],[-346.268,-215.662],[-346.273,-215.873],[-345.966,-215.324],[-339.201,-209.355],[-334.784,-206.363],[-317.491,-201.043],[-314.187,-200.865],[-312.98,-202.072],[-321.883,-211.156],[-322.582,-217.987],[-311.27,-225.227],[-301.656,-241.418],[-302.897,-243.298],[-304.598,-241.609],[-306.05,-236.735],[-307.366,-235.311],[-308.534,-237.228]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","cix":2,"ix":9},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.175,0.68],[1.35,-5.542],[-3.442,-0.678],[-1.532,-6.323],[-0.429,1.453],[-0.813,-0.741],[1.533,-1.666],[-0.946,-0.97],[-1.17,0.061],[-1.659,-5.075],[1.422,1.265],[0.633,-0.115],[0.357,-0.875],[-0.096,-0.217],[1.792,-0.912],[1.09,1.404],[2.627,2.337],[0.51,2.031],[5.345,2.847],[1.399,-0.001],[0.218,-7.591],[-3.597,-2.499],[4.315,-4.532],[0.309,-1.936],[4.498,-0.487],[0.284,-0.995],[2.071,-3.746],[-2.628,-0.239],[-5.366,-0.031],[-0.925,2.395],[-6.233,-1.08],[-2.51,1.896],[1.048,1.024],[-0.124,3.955],[-2.345,-0.571],[0.756,-2.008],[0.164,-0.826],[-6.119,-0.664],[-1.014,1.207],[0.843,1.133],[-1.256,2.075],[-0.934,-0.089],[0.158,-0.856],[-2.771,-2.361],[6.053,-5.378],[-0.775,-3.478],[-1.139,-0.27],[-0.489,1.128],[-3.138,2.451],[-0.217,-0.41],[0.72,-3.021],[0.007,-1.381],[1.845,-0.255],[-1.08,-5.751],[0.109,-0.844],[-3.659,-0.618],[-0.291,1.749],[-1.03,-0.922],[-3.742,4.128],[0.403,1.332],[1.23,0.083],[1.2,0.318],[-0.322,2.49],[-2.321,-0.607],[-0.388,1.906],[-0.255,1.532],[-0.705,-0.596],[-0.18,-0.735],[-2.931,0.883],[-0.966,1.074],[-0.264,5.324],[-1.032,1.213],[-1.302,-0.469],[0.2,-1.091],[-0.662,-1.507],[-1.224,0.14],[0.12,0.735],[-3.063,-0.214],[-0.985,1.961],[0.722,1.41],[0.801,1.32],[-0.652,0.76],[-0.892,-0.445],[-2.773,-0.866],[1.371,-2.298],[-0.92,-2.308],[-0.567,-0.168],[-0.025,0.724],[-2.851,-1.113],[-2.412,0.099],[0,0],[1.307,1.452],[5.417,3.836],[0.323,3.4],[3.242,1.456],[0.8,1.754],[0.465,5.896],[0,0],[5.875,-3.044],[-1.015,1.665],[2.393,0.944],[1.422,1.482],[1.375,-0.279],[-0.028,4.546],[-0.331,-0.235],[-1.316,1.243],[0.928,1.072],[4.967,1.455],[1.052,-3.112],[-2.749,-0.612],[-0.133,-0.048],[0.533,-2.099],[2.08,0.462],[0.057,3.931],[1.959,0.619],[1.261,-1.165],[-0.403,-1.525],[1.34,-1.183]],"o":[[-4.899,-2.847],[1.987,3.013],[6.589,1.302],[1.744,-1.274],[0.893,-0.869],[-0.128,1.755],[-0.887,0.972],[0.681,0.693],[4.987,-0.288],[-2.358,0.575],[-0.554,-0.482],[-0.398,0.314],[0.066,0.211],[0.704,1.513],[-1.828,0.936],[-2.174,-2.826],[-1.5,-1.331],[-1.508,-5.986],[-1.399,-0.119],[-8.158,0.014],[-0.15,5.318],[5.098,3.529],[-1.394,1.539],[-0.57,3.389],[-1.079,0.116],[-1.149,4.101],[-1.117,2.021],[5.336,0.483],[2.593,0.022],[2.526,-6.598],[2.797,0.492],[1.14,-0.851],[-3.53,-3.446],[0.062,-2.014],[2.218,0.541],[-0.296,0.79],[-1.187,5.994],[1.465,0.161],[1.213,-1.442],[-1.391,-1.874],[0.326,-0.531],[1.182,0.107],[-0.776,4.149],[6.29,5.36],[-2.8,2.487],[0.288,1.266],[1.398,0.324],[2.042,-4.632],[0.175,-0.139],[1.198,2.26],[-0.882,1.327],[-0.02,1.694],[-6.513,0.898],[0.15,0.79],[-0.407,3.347],[0.231,-1.604],[1.9,-0.273],[4.145,3.71],[0.899,-0.984],[-0.463,-1.537],[-1.26,-0.089],[-2.224,-0.583],[0.34,-2.545],[2.037,0.529],[0.321,-1.514],[0.561,-0.248],[0.813,0.681],[-0.901,2.937],[1.363,-0.062],[5.577,-0.313],[0.08,-1.634],[0.736,-0.869],[1.434,0.517],[-0.291,1.532],[0.379,0.862],[1.073,-0.122],[-0.605,-3.84],[2.333,0.173],[1.166,-2.334],[-0.692,-1.368],[-0.44,-0.729],[0.863,-0.996],[2.555,1.252],[2.791,0.872],[-1.214,2.021],[0.235,0.585],[0.88,0.264],[0.166,-3.829],[2.242,0.878],[0,0],[0.714,-2.352],[-4.469,-4.94],[-2.645,-1.885],[-0.334,-3.521],[-1.742,-0.776],[-2.299,-5.026],[0,0],[-5.402,-0.646],[-1.007,0.526],[2.138,-3.499],[-1.868,-0.734],[-0.783,-0.807],[-3.896,0.775],[0.398,0.229],[1.042,0.765],[1.134,-1.062],[-3.258,-3.789],[-2.749,-0.805],[-1.197,3.534],[0.139,0.03],[1.266,0.445],[-0.557,2.135],[-3.804,-0.859],[-0.028,-1.863],[-1.766,-0.559],[-1.617,1.485],[0.306,1.139],[-1.08,0.948]],"v":[[-193.43,-232.934],[-201.916,-229.267],[-193.589,-224.017],[-185.468,-216.403],[-184.053,-220.987],[-181.509,-220.856],[-181.99,-215.592],[-182.698,-212.209],[-179.244,-211.555],[-169.959,-205.01],[-175.003,-207.351],[-176.806,-207.958],[-177.874,-206.202],[-177.616,-205.557],[-178.289,-201.499],[-182.683,-203.081],[-190.339,-210.339],[-193.603,-215.159],[-204.269,-228.119],[-208.465,-228.465],[-223.515,-214.45],[-216.446,-204.243],[-215.622,-196.152],[-217.635,-190.742],[-223.146,-183.411],[-225.023,-181.305],[-229.852,-169.574],[-227.842,-165.102],[-211.762,-164.387],[-206.175,-168.36],[-192.47,-175.017],[-184.347,-176.465],[-183.748,-179.185],[-185.648,-190.886],[-182.382,-195.779],[-182.086,-190.172],[-182.781,-187.73],[-175.977,-178.583],[-172.063,-179.63],[-172.74,-183.398],[-173.29,-189.318],[-172.052,-190.784],[-171.053,-188.856],[-166.527,-179.925],[-166.147,-167.764],[-169.073,-159.103],[-167.376,-155.872],[-164.931,-158.377],[-154.471,-163.668],[-153.091,-162.904],[-150.27,-155.798],[-150.57,-151.656],[-152.768,-148.024],[-159.651,-137.418],[-159.925,-134.903],[-154.179,-127.878],[-156.153,-131.578],[-152.278,-129.803],[-143.101,-130.306],[-141.651,-133.648],[-144.905,-134.959],[-148.686,-135.179],[-152.317,-139.692],[-147.883,-141.932],[-144.33,-144.655],[-143.548,-149.232],[-141.811,-149.656],[-141.789,-147.461],[-138.728,-144.389],[-135.128,-145.821],[-128.936,-151.784],[-127.159,-155.994],[-124.3,-157.359],[-123.417,-154.46],[-123.535,-149.872],[-121.463,-148.065],[-119.441,-149.966],[-115.073,-153.757],[-109.516,-157.156],[-112.432,-160.373],[-114.942,-164.272],[-115.085,-166.635],[-112.426,-166.559],[-105.4,-161.887],[-103.65,-157.035],[-104.687,-150.601],[-103.295,-149.185],[-102.076,-150.477],[-97.003,-153.164],[-89.937,-152.291],[-88.133,-154.095],[-90.377,-159.2],[-105.481,-172.047],[-110.37,-179.555],[-115.801,-187.026],[-119.578,-190.839],[-126.631,-205.858],[-128.438,-207.665],[-144.746,-209.248],[-146.583,-211.459],[-149.297,-216.925],[-154.383,-219.838],[-157.367,-220.855],[-162.933,-226.384],[-161.836,-225.746],[-158.509,-224.242],[-159.597,-227.937],[-171.419,-236.524],[-178.951,-235.462],[-173.523,-230.698],[-173.113,-230.602],[-170.54,-228.054],[-174.787,-225.578],[-184.026,-236.784],[-186.169,-240.894],[-191.469,-240.605],[-190.291,-236.193],[-189.896,-232.781]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","cix":2,"ix":10},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.268,-0.653],[2.587,-0.346],[-0.783,-0.892],[-1.599,1.792],[0.41,0.229]],"o":[[-2.37,0.683],[-1.001,0.134],[1.476,1.669],[0.422,-0.278],[-1.778,-0.981]],"v":[[-212.816,-159.189],[-219.861,-156.59],[-220.617,-154.328],[-207.882,-154.906],[-207.591,-156.221]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","cix":2,"ix":11},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.56,4.139],[-0.315,1.881],[-0.323,3.805],[2.928,2.783],[-0.821,1.074],[2.008,0.245],[0.739,2.441],[-2.738,1.22],[1.987,3.145],[-4.01,-0.087],[-1.248,-0.234],[-0.873,-0.813],[0.032,-2.116],[-3.117,-0.317],[-5.05,3.448],[-2.594,-4.646],[-2.979,0.256],[-0.659,1.84],[9.09,2.271],[0.42,2.641],[-2.009,1.322],[-1.675,-1.421],[-0.56,-1.332],[-3.594,0.45],[0.002,-2.267],[-1.76,-0.782],[-1.026,0.821],[3.777,3.391],[1.149,3.309],[2.282,2.898],[0.714,4.033],[0,0],[0.549,-0.127],[0.006,-0.066],[0.151,0.175],[1.372,3.086],[1.893,0.396],[5.26,3.438],[1.122,-0.254],[0,0],[-2.807,-3.169],[2.371,-1.672],[4.595,-1.114],[-1.628,-6.938],[-1.127,-0.017],[-0.266,0.772],[-0.55,1.598],[-0.922,-0.102],[0.145,-0.796],[0.557,-2.328],[0.188,-1.031],[1.774,-1.376],[-1.594,-3.731],[1.37,-1.683],[-0.902,-2.556],[5.427,-0.186],[1.919,-2.112],[-1.737,-6.022],[1.261,-1.346],[3.989,-4.025],[-2.163,-8.041],[0,0],[0.042,0.332],[-0.37,2.43],[-4.189,-1.039],[-5.123,3.978],[-2.121,-1.735],[-1.653,1.087],[-2.653,-0.106],[-1.129,1.768]],"o":[[-1.193,-1.398],[0.673,-4.046],[0.372,-4.348],[-0.753,-0.717],[3.948,-5.153],[-2.122,-0.251],[-0.818,-2.688],[3.028,-1.341],[-2.071,-3.278],[1.248,0.029],[0.861,0.813],[1.186,1.79],[-0.046,3.853],[6.523,0.657],[4.483,-3.061],[1.005,1.79],[2.888,-0.25],[3.204,-8.842],[-2.55,-0.631],[-0.438,-2.695],[2.039,-1.341],[1.175,1.006],[1.444,3.375],[1.791,-0.225],[0.011,0.929],[1.308,0.584],[3.276,-2.614],[-2.392,-2.15],[-1.317,-3.791],[-2.704,-3.428],[0,0],[-0.537,0.127],[0.012,0.072],[-0.054,-0.187],[-3.032,-1.101],[-0.788,-1.766],[-5.926,-1.243],[-1.012,-0.662],[0,0],[2.988,3.012],[1.765,1.982],[-3.62,2.56],[-6.748,1.652],[0.18,0.772],[0.971,0.005],[0.556,-1.604],[0.212,-0.597],[1.097,0.12],[-0.454,2.358],[-0.188,1.031],[-0.973,2.081],[-3.331,2.584],[0.65,1.507],[-1.847,2.257],[1.732,4.882],[-2.93,0.099],[-4.967,5.473],[0.505,1.748],[-3.893,4.134],[-5.051,5.099],[0,0],[-0.048,-0.301],[-0.431,-3.111],[0.655,-4.269],[5.811,1.43],[1.895,-1.473],[1.506,1.229],[2.16,-1.425],[2.261,0.1],[2.615,-4.072]],"v":[[-247.096,-202.195],[-249.871,-206.769],[-250.59,-218.483],[-254.469,-228.639],[-255.872,-231.393],[-258.467,-234.604],[-264.181,-236.999],[-260.787,-243.068],[-259.002,-249.43],[-255.554,-254.685],[-251.823,-254.007],[-249.221,-251.574],[-247.025,-245.697],[-241.64,-240.637],[-224.77,-246.435],[-216.765,-244.634],[-213.435,-239.506],[-211.35,-244.844],[-218.838,-258.837],[-223.452,-263.789],[-220.455,-269.893],[-214.674,-268.639],[-211.512,-265.271],[-204.208,-261.045],[-200.671,-258.45],[-200.589,-255.689],[-197.134,-256.723],[-198.058,-268.208],[-204.696,-275.16],[-211.289,-284.783],[-216.283,-295.51],[-218.693,-297.92],[-220.321,-297.544],[-220.315,-297.333],[-220.622,-297.882],[-227.388,-303.851],[-231.805,-306.843],[-249.098,-312.163],[-252.402,-312.341],[-253.609,-311.134],[-244.706,-302.05],[-244.007,-295.219],[-255.319,-287.98],[-264.932,-271.788],[-263.692,-269.908],[-261.99,-271.598],[-260.539,-276.471],[-259.223,-277.895],[-258.055,-275.978],[-259.695,-268.977],[-260.253,-265.889],[-264.515,-260.772],[-266.73,-251.34],[-266.53,-246.553],[-267.121,-239.336],[-271.89,-232.687],[-278.936,-229.364],[-280.653,-211.72],[-281.386,-207.662],[-292.817,-195.05],[-299.286,-176.473],[-293.702,-170.889],[-293.834,-171.818],[-291.301,-178.76],[-285.238,-182.679],[-268.655,-185.094],[-262.396,-185.22],[-257.753,-185.092],[-250.54,-187.221],[-245.756,-190.21]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","cix":2,"ix":12},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[1.175,0.68],[1.35,-5.542],[-3.442,-0.678],[-1.532,-6.323],[-0.429,1.453],[-0.813,-0.741],[1.533,-1.666],[-0.946,-0.97],[-1.17,0.061],[-1.659,-5.075],[1.422,1.265],[0.633,-0.115],[0.357,-0.875],[-0.096,-0.217],[1.792,-0.912],[1.09,1.404],[2.627,2.337],[0.511,2.031],[5.346,2.847],[1.399,-0.001],[0.218,-7.591],[-3.597,-2.499],[4.315,-4.532],[0.309,-1.936],[4.498,-0.487],[0.284,-0.995],[2.071,-3.746],[-2.629,-0.239],[-5.366,-0.031],[-0.925,2.395],[-6.233,-1.08],[-2.51,1.896],[1.048,1.024],[-0.124,3.955],[-2.345,-0.57],[0.756,-2.008],[0.164,-0.826],[-6.119,-0.664],[-1.014,1.207],[0.843,1.133],[-1.256,2.075],[-0.934,-0.089],[0.158,-0.856],[-2.771,-2.361],[6.052,-5.378],[-0.775,-3.478],[-1.139,-0.27],[-0.489,1.128],[-3.138,2.451],[-0.217,-0.41],[0.72,-3.021],[0.007,-1.381],[1.845,-0.255],[-1.08,-5.751],[0.109,-0.844],[-3.659,-0.618],[-0.291,1.749],[-1.03,-0.921],[-3.742,4.128],[0.403,1.332],[1.23,0.083],[1.2,0.318],[-0.322,2.49],[-2.321,-0.607],[-0.388,1.906],[-0.255,1.532],[-0.705,-0.596],[-0.18,-0.735],[-2.931,0.883],[-0.966,1.074],[-0.264,5.324],[-1.032,1.213],[-1.302,-0.469],[0.2,-1.091],[-0.662,-1.507],[-1.224,0.14],[0.12,0.735],[-3.063,-0.214],[-0.985,1.961],[0.722,1.41],[0.801,1.32],[-0.652,0.76],[-0.892,-0.445],[-2.773,-0.866],[1.371,-2.298],[-0.92,-2.308],[-0.567,-0.168],[-0.025,0.724],[-2.851,-1.113],[-2.412,0.099],[0,0],[1.307,1.452],[5.417,3.836],[0.323,3.4],[3.242,1.456],[0.8,1.754],[0.465,5.896],[0,0],[5.875,-3.044],[-1.015,1.665],[2.393,0.944],[1.422,1.482],[1.375,-0.279],[-0.028,4.546],[-0.331,-0.235],[-1.315,1.243],[0.928,1.073],[4.967,1.455],[1.052,-3.112],[-2.749,-0.612],[-0.133,-0.048],[0.532,-2.099],[2.08,0.462],[0.057,3.931],[1.959,0.619],[1.261,-1.165],[-0.403,-1.525],[1.34,-1.183]],"o":[[-4.899,-2.847],[1.987,3.013],[6.589,1.302],[1.744,-1.274],[0.893,-0.869],[-0.128,1.755],[-0.887,0.971],[0.681,0.693],[4.987,-0.288],[-2.358,0.575],[-0.554,-0.482],[-0.398,0.314],[0.066,0.211],[0.704,1.513],[-1.828,0.936],[-2.174,-2.826],[-1.5,-1.331],[-1.508,-5.986],[-1.399,-0.119],[-8.158,0.014],[-0.15,5.318],[5.098,3.529],[-1.394,1.539],[-0.57,3.389],[-1.079,0.116],[-1.149,4.101],[-1.117,2.021],[5.336,0.483],[2.593,0.022],[2.526,-6.598],[2.797,0.492],[1.14,-0.851],[-3.53,-3.446],[0.062,-2.014],[2.218,0.541],[-0.296,0.79],[-1.187,5.994],[1.465,0.161],[1.213,-1.442],[-1.391,-1.874],[0.326,-0.531],[1.182,0.107],[-0.776,4.149],[6.29,5.36],[-2.8,2.487],[0.288,1.266],[1.398,0.324],[2.042,-4.632],[0.175,-0.139],[1.198,2.26],[-0.882,1.327],[-0.02,1.694],[-6.513,0.898],[0.15,0.79],[-0.407,3.347],[0.231,-1.604],[1.9,-0.273],[4.145,3.71],[0.899,-0.984],[-0.463,-1.537],[-1.26,-0.089],[-2.224,-0.583],[0.34,-2.545],[2.037,0.529],[0.321,-1.514],[0.561,-0.248],[0.813,0.681],[-0.901,2.937],[1.363,-0.062],[5.578,-0.313],[0.08,-1.634],[0.736,-0.869],[1.434,0.517],[-0.291,1.532],[0.379,0.862],[1.073,-0.122],[-0.605,-3.84],[2.333,0.173],[1.166,-2.334],[-0.692,-1.368],[-0.44,-0.729],[0.863,-0.996],[2.555,1.252],[2.791,0.872],[-1.214,2.021],[0.235,0.585],[0.88,0.264],[0.166,-3.829],[2.242,0.878],[0,0],[0.714,-2.352],[-4.469,-4.94],[-2.645,-1.885],[-0.334,-3.521],[-1.742,-0.776],[-2.299,-5.026],[0,0],[-5.402,-0.646],[-1.007,0.525],[2.138,-3.499],[-1.868,-0.734],[-0.783,-0.807],[-3.896,0.775],[0.398,0.229],[1.042,0.765],[1.135,-1.062],[-3.258,-3.789],[-2.749,-0.805],[-1.197,3.534],[0.139,0.03],[1.266,0.445],[-0.557,2.135],[-3.804,-0.859],[-0.028,-1.863],[-1.766,-0.559],[-1.617,1.485],[0.306,1.139],[-1.08,0.948]],"v":[[-425.533,-465.037],[-434.02,-461.37],[-425.692,-456.12],[-417.571,-448.506],[-416.156,-453.09],[-413.612,-452.96],[-414.093,-447.695],[-414.802,-444.312],[-411.347,-443.658],[-402.062,-437.113],[-407.107,-439.454],[-408.909,-440.061],[-409.978,-438.305],[-409.719,-437.66],[-410.392,-433.602],[-414.786,-435.184],[-422.443,-442.442],[-425.706,-447.263],[-436.372,-460.222],[-440.568,-460.568],[-455.619,-446.554],[-448.55,-436.346],[-447.725,-428.256],[-449.738,-422.845],[-455.25,-415.515],[-457.127,-413.409],[-461.955,-401.677],[-459.945,-397.205],[-443.866,-396.49],[-438.279,-400.463],[-424.574,-407.12],[-416.451,-408.568],[-415.851,-411.288],[-417.752,-422.99],[-414.485,-427.883],[-414.189,-422.275],[-414.885,-419.833],[-408.08,-410.686],[-404.166,-411.733],[-404.844,-415.501],[-405.393,-421.421],[-404.156,-422.888],[-403.156,-420.959],[-398.631,-412.028],[-398.25,-399.867],[-401.176,-391.206],[-399.479,-387.976],[-397.035,-390.48],[-386.575,-395.772],[-385.195,-395.007],[-382.374,-387.901],[-382.673,-383.759],[-384.871,-380.127],[-391.754,-369.521],[-392.028,-367.006],[-386.282,-359.981],[-388.257,-363.682],[-384.381,-361.907],[-375.204,-362.409],[-373.754,-365.751],[-377.009,-367.062],[-380.789,-367.282],[-384.42,-371.795],[-379.987,-374.036],[-376.433,-376.758],[-375.651,-381.335],[-373.914,-381.759],[-373.892,-379.564],[-370.832,-376.492],[-367.231,-377.924],[-361.039,-383.887],[-359.263,-388.097],[-356.404,-389.463],[-355.52,-386.563],[-355.639,-381.975],[-353.566,-380.168],[-351.545,-382.069],[-347.176,-385.86],[-341.62,-389.259],[-344.535,-392.476],[-347.045,-396.375],[-347.188,-398.738],[-344.529,-398.662],[-337.503,-393.99],[-335.753,-389.138],[-336.79,-382.704],[-335.399,-381.288],[-334.18,-382.58],[-329.106,-385.267],[-322.041,-384.394],[-320.236,-386.198],[-322.48,-391.303],[-337.584,-404.15],[-342.473,-411.658],[-347.905,-419.129],[-351.682,-422.942],[-358.734,-437.961],[-360.541,-439.768],[-376.849,-441.351],[-378.686,-443.562],[-381.4,-449.028],[-386.487,-451.942],[-389.47,-452.958],[-395.036,-458.488],[-393.939,-457.849],[-390.613,-456.345],[-391.701,-460.04],[-403.522,-468.627],[-411.054,-467.565],[-405.626,-462.801],[-405.216,-462.705],[-402.644,-460.157],[-406.891,-457.681],[-416.129,-468.887],[-418.272,-472.997],[-423.572,-472.709],[-422.395,-468.296],[-422,-464.884]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","cix":2,"ix":13},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.268,-0.653],[2.587,-0.346],[-0.783,-0.892],[-1.599,1.792],[0.41,0.229]],"o":[[-2.37,0.683],[-1.001,0.134],[1.476,1.669],[0.422,-0.278],[-1.778,-0.981]],"v":[[-444.919,-391.292],[-451.964,-388.693],[-452.72,-386.431],[-439.985,-387.01],[-439.695,-388.324]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 14","cix":2,"ix":14},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.56,4.139],[-0.315,1.881],[-0.323,3.805],[2.928,2.783],[-0.821,1.074],[2.008,0.245],[0.739,2.441],[-2.738,1.22],[1.987,3.146],[-4.01,-0.087],[-1.248,-0.234],[-0.873,-0.813],[0.032,-2.116],[-3.117,-0.317],[-5.05,3.447],[-2.594,-4.646],[-2.979,0.256],[-0.659,1.84],[9.09,2.271],[0.42,2.641],[-2.009,1.322],[-1.675,-1.421],[-0.56,-1.332],[-3.594,0.45],[0.002,-2.267],[-1.76,-0.782],[-1.026,0.821],[3.777,3.391],[1.148,3.309],[2.282,2.898],[0.714,4.033],[0,0],[0.549,-0.127],[0.006,-0.066],[0.151,0.175],[1.372,3.086],[1.893,0.396],[5.26,3.438],[1.122,-0.254],[0,0],[-2.807,-3.169],[2.371,-1.672],[4.595,-1.114],[-1.628,-6.938],[-1.127,-0.017],[-0.266,0.772],[-0.55,1.598],[-0.922,-0.102],[0.145,-0.796],[0.557,-2.328],[0.188,-1.031],[1.774,-1.376],[-1.594,-3.731],[1.37,-1.684],[-0.902,-2.556],[5.427,-0.186],[1.919,-2.112],[-1.737,-6.022],[1.261,-1.346],[3.989,-4.025],[-2.163,-8.041],[0,0],[0.042,0.331],[-0.37,2.43],[-4.189,-1.039],[-5.123,3.978],[-2.121,-1.735],[-1.653,1.087],[-2.653,-0.106],[-1.129,1.768]],"o":[[-1.192,-1.398],[0.673,-4.046],[0.372,-4.348],[-0.753,-0.717],[3.948,-5.153],[-2.122,-0.251],[-0.818,-2.688],[3.028,-1.341],[-2.071,-3.278],[1.248,0.029],[0.861,0.813],[1.186,1.79],[-0.046,3.853],[6.523,0.657],[4.483,-3.061],[1.005,1.79],[2.888,-0.25],[3.204,-8.842],[-2.55,-0.631],[-0.438,-2.695],[2.039,-1.341],[1.175,1.006],[1.444,3.375],[1.791,-0.225],[0.011,0.929],[1.308,0.584],[3.276,-2.614],[-2.392,-2.15],[-1.317,-3.791],[-2.704,-3.428],[0,0],[-0.537,0.127],[0.012,0.072],[-0.054,-0.187],[-3.032,-1.101],[-0.788,-1.766],[-5.926,-1.243],[-1.012,-0.662],[0,0],[2.988,3.012],[1.765,1.982],[-3.62,2.56],[-6.748,1.652],[0.18,0.772],[0.971,0.005],[0.556,-1.604],[0.212,-0.597],[1.097,0.12],[-0.454,2.358],[-0.188,1.031],[-0.973,2.081],[-3.331,2.584],[0.65,1.507],[-1.847,2.257],[1.732,4.882],[-2.93,0.099],[-4.967,5.473],[0.505,1.748],[-3.893,4.134],[-5.051,5.099],[0,0],[-0.048,-0.301],[-0.431,-3.111],[0.655,-4.269],[5.811,1.43],[1.895,-1.473],[1.506,1.229],[2.16,-1.425],[2.261,0.1],[2.615,-4.072]],"v":[[-479.199,-434.298],[-481.974,-438.872],[-482.693,-450.586],[-486.572,-460.742],[-487.975,-463.496],[-490.57,-466.708],[-496.284,-469.102],[-492.89,-475.171],[-491.105,-481.533],[-487.658,-486.788],[-483.926,-486.11],[-481.324,-483.677],[-479.128,-477.8],[-473.743,-472.74],[-456.873,-478.538],[-448.868,-476.737],[-445.538,-471.609],[-443.453,-476.947],[-450.941,-490.94],[-455.555,-495.892],[-452.559,-501.997],[-446.778,-500.742],[-443.615,-497.374],[-436.312,-493.149],[-432.775,-490.553],[-432.693,-487.792],[-429.237,-488.826],[-430.161,-500.311],[-436.799,-507.263],[-443.392,-516.886],[-448.387,-527.613],[-450.796,-530.023],[-452.424,-529.648],[-452.419,-529.437],[-452.726,-529.985],[-459.491,-535.954],[-463.908,-538.946],[-481.201,-544.266],[-484.505,-544.444],[-485.712,-543.237],[-476.809,-534.153],[-476.11,-527.322],[-487.422,-520.083],[-497.036,-503.891],[-495.795,-502.011],[-494.094,-503.701],[-492.642,-508.574],[-491.326,-509.998],[-490.158,-508.082],[-491.799,-501.08],[-492.356,-497.992],[-496.618,-492.876],[-498.833,-483.444],[-498.633,-478.656],[-499.224,-471.439],[-503.994,-464.79],[-511.039,-461.467],[-512.756,-443.823],[-513.489,-439.765],[-524.921,-427.153],[-531.389,-408.577],[-525.805,-402.992],[-525.937,-403.921],[-523.404,-410.863],[-517.341,-414.782],[-500.758,-417.197],[-494.499,-417.323],[-489.857,-417.195],[-482.644,-419.324],[-477.859,-422.313]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.176,0.788,0.49,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","cix":2,"ix":15}],"ip":0,"op":250,"st":0},{"ind":8,"ty":4,"nm":"Layer 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[180.095,189.224,0],"ix":2,"l":2},"a":{"a":0,"k":[5.095,14.224,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-7.851],[22.058,-15.64],[1.57,-0.976],[16.6,0],[8.247,2.637],[0,38.552],[-16.586,15.732],[-23.018,0],[-9.009,-3.186],[-7.424,-27.378]],"o":[[0,29.101],[-1.509,1.052],[-13.155,8.125],[-9.131,0],[-34.893,-11.067],[0,-24.665],[15.488,-14.695],[10.091,0],[26.525,9.375],[1.966,7.226]],"v":[[91.429,14.224],[54.98,84.712],[50.361,87.761],[5.102,100.566],[-21.072,96.511],[-81.24,14.224],[-54.319,-48.413],[5.102,-72.117],[33.898,-67.194],[88.41,-8.459]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.443,0.847,0.973,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1}],"ip":0,"op":250,"st":0},{"ind":9,"ty":4,"nm":"Layer 7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[195,145,0],"ix":2,"l":2},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":1,"k":[{"i":{"x":[0.667,0.667,0.667],"y":[1,1,1]},"o":{"x":[0.333,0.333,0.333],"y":[0,0,0]},"t":50,"s":[0,0,100]},{"t":59,"s":[100,100,100]}],"ix":6,"l":2,"x":"var $bm_rt;\nvar fx = effect('Ålosilo pli pura');\nvar doAnticipation = fx(1).value;\nvar doInterpolation = fx(2).value;\nvar doFollowThrough = fx(3).value;\nvar damping = $bm_div(fx(15).value, 10);\nvar elasticity = $bm_div(fx(13).value, 10);\nvar bounce = fx(17).value;\nvar anticipationDuration = fx(5).value;\nvar anticipationQuantity = $bm_div(fx(6).value, 100);\nvar slowIn = $bm_div(fx(9).value, 100);\nvar slowOut = $bm_div(fx(10).value, 100);\nvar spatialMode = fx(21).value;\nvar spatialDoInterpolation = fx(20).value;\nvar moBlurPrecision = fx(32).value;\nvar elasticityRandom = fx(14).value;\nvar dampingRandom = fx(16).value;\nvar softBody = fx(28).value;\nvar flexibility = $bm_div(fx(29).value, 100);\nvar doOverlap = fx(23).value;\nvar overlapDuration = fx(24).value;\nvar overlapRandom = fx(25).value;\nvar threshold = $bm_div($bm_div(1, moBlurPrecision), 1000);\nvar zeroValue;\nif ($bm_isInstanceOfArray(value)) {\n    if (value.length == 2)\n        zeroValue = [\n            0,\n            0\n        ];\n    else if (value.length == 3)\n        zeroValue = [\n            0,\n            0,\n            0\n        ];\n    else if (value.length == 4)\n        zeroValue = [\n            0,\n            0,\n            0,\n            0\n        ];\n} else\n    zeroValue = 0;\nvar isThisSpatial = isSpatial(thisProperty);\nvar isThisPosition = thisProperty === $bm_transform.position;\nvar simulate = false;\nif (isThisSpatial) {\n    doInterpolation = doInterpolation && spatialDoInterpolation;\n    if (isThisPosition && thisProperty.numKeys > 0) {\n        doOverlap = false;\n        simulate = false;\n    } else {\n        simulate = spatialMode == 2;\n        doOverlap = overlapDuration != 0 && doOverlap && simulate;\n    }\n} else {\n    doOverlap = false;\n}\nif (!doOverlap) {\n    overlapDuration = 0;\n}\nif (simulate && softBody && isThisSpatial && !isThisPosition && (doFollowThrough || doOverlap)) {\n    var distanceRatio = $bm_div(length(valueAtTime(0), $bm_transform.anchorPoint), $bm_div(thisLayer.width, 2));\n    distanceRatio = $bm_div($bm_sum(1, $bm_mul(distanceRatio, flexibility)), 2);\n    if (doFollowThrough) {\n        elasticity = $bm_div(elasticity, distanceRatio);\n        damping = $bm_div(damping, distanceRatio);\n    }\n    if (doOverlap) {\n        overlapDuration = $bm_mul(overlapDuration, distanceRatio);\n    }\n}\nseedRandom(0, true);\nif (doFollowThrough) {\n    if (elasticityRandom > 0)\n        elasticity = addNoise(elasticity, elasticityRandom);\n    if (dampingRandom > 0)\n        damping = addNoise(damping, dampingRandom);\n}\nif (doOverlap) {\n    if (doOverlap && overlapRandom > 0)\n        overlapDuration = addNoise(overlapDuration, overlapRandom);\n}\nvar result = value;\nfunction isSpatial(prop) {\n    if (!(prop.value instanceof Array))\n        return false;\n    if (prop.value.length != 2 && prop.value.length != 3)\n        return false;\n    try {\n        if (typeof prop.speed !== 'undefined')\n            return true;\n    } catch (e) {\n        return false;\n    }\n}\nfunction addNoise(val, quantity) {\n    var randomValue = random(0.9, 1.1);\n    var noiseValue = noise($bm_mul(valueAtTime(0), randomValue));\n    noiseValue = $bm_mul(noiseValue, $bm_div(quantity, 100));\n    return $bm_mul(val, $bm_sum(noiseValue, 1));\n}\nfunction isAfterLastKey() {\n    if (numKeys == 0)\n        return false;\n    var nKey = nearestKey(time);\n    return nKey.time <= time && nKey.index == numKeys;\n}\nfunction isStill(t, threshold) {\n    var d = $bm_sub(valueAtTime(t), valueAtTime($bm_sum(t, framesToTime(1))));\n    if ($bm_isInstanceOfArray(d)) {\n        for (var i = 0; i < d.length; i++) {\n            d[i] = Math.abs(d[i]);\n            if (d[i] >= threshold) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        d = Math.abs(d);\n        return d < threshold;\n    }\n}\nfunction bezierInterpolation(t, tMin, tMax, value1, value2, bezierPoints) {\n    if (arguments.length !== 5 && arguments.length !== 6)\n        return t;\n    var a = $bm_sub(value2, value1);\n    var b = $bm_sub(tMax, tMin);\n    if (b == 0)\n        return t;\n    var c = clamp($bm_div($bm_sub(t, tMin), b), 0, 1);\n    if (!(bezierPoints instanceof Array) || bezierPoints.length !== 4)\n        bezierPoints = [\n            0.33,\n            0,\n            0.66,\n            1\n        ];\n    return $bm_sum($bm_mul(a, h(c, bezierPoints)), value1);\n    function h(f, g) {\n        var x = $bm_mul(3, g[0]);\n        var j = $bm_sub($bm_mul(3, $bm_sub(g[2], g[0])), x);\n        var k = $bm_sub($bm_sub(1, x), j);\n        var l = $bm_mul(3, g[1]);\n        var m = $bm_sub($bm_mul(3, $bm_sub(g[3], g[1])), l);\n        var n = $bm_sub($bm_sub(1, l), m);\n        var d = f;\n        for (var i = 0; i < 5; i++) {\n            var z = $bm_sub($bm_mul(d, $bm_sum(x, $bm_mul(d, $bm_sum(j, $bm_mul(d, k))))), f);\n            if (Math.abs(z) < 0.001)\n                break;\n            d = $bm_sub(d, $bm_div(z, $bm_sum(x, $bm_mul(d, $bm_sum($bm_mul(2, j), $bm_mul($bm_mul(3, k), d))))));\n        }\n        return $bm_mul(d, $bm_sum(l, $bm_mul(d, $bm_sum(m, $bm_mul(d, n)))));\n    }\n}\nfunction getPropWorldSpeed(t, prop) {\n    return length(getPropWorldVelocity(t, prop));\n}\nfunction getPrevKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time <= t)\n        return nKey;\n    if (nKey.index > 1)\n        return key($bm_sub(nKey.index, 1));\n    return null;\n}\nfunction getNextKey(t) {\n    if (numKeys == 0)\n        return null;\n    var nKey = nearestKey(t);\n    if (nKey.time >= t)\n        return nKey;\n    if (nKey.index < numKeys)\n        return key($bm_sum(nKey.index, 1));\n    return null;\n}\nfunction getPropWorldVelocity(t, prop) {\n    return $bm_mul($bm_sub(getPropWorldValue($bm_sum(t, 0.005), prop), getPropWorldValue($bm_sub(t, 0.005), prop)), 100);\n}\nfunction getLayerWorldPos(t, l) {\n    return l.toWorld(l.anchorPoint, t);\n}\nfunction getPropWorldValue(t, prop) {\n    if (isPosition(prop))\n        return getLayerWorldPos(t, thisLayer);\n    return thisLayer.toWorld(prop.valueAtTime(t), t);\n}\nfunction isPosition(prop) {\n    return prop === $bm_transform.position;\n}\nfunction isKeyTop(k, axis) {\n    var prevSpeed = velocityAtTime($bm_sub(k.time, threshold));\n    var nextSpeed = velocityAtTime($bm_sum(k.time, threshold));\n    if ($bm_isInstanceOfArray(value)) {\n        prevSpeed = prevSpeed[axis];\n        nextSpeed = nextSpeed[axis];\n    }\n    if (Math.abs(prevSpeed) < 0.01 || Math.abs(nextSpeed) < 0.01)\n        return true;\n    return $bm_mul(prevSpeed, nextSpeed) < 0;\n}\nfunction anticipate() {\n    var anticipation = zeroValue;\n    if (isAfterLastKey())\n        return anticipation;\n    if (numKeys < 2)\n        return anticipation;\n    var nextKey = getNextKey(time);\n    var aKey = nextKey;\n    if (!isStill(aKey.time - 0.1, 0.1)) {\n        aKey = getPrevKey(time);\n        if (!isStill(aKey.time - 0.1, 0.1))\n            return anticipation;\n    }\n    if (aKey.index == numKeys)\n        return anticipation;\n    var anticipationMiddle = aKey.time;\n    var anticipationStart = $bm_sub(anticipationMiddle, anticipationDuration);\n    var anticipationEnd = key(aKey.index + 1).time;\n    var startValue = anticipation;\n    var midValue = $bm_mul($bm_sum($bm_neg(valueAtTime($bm_sum(anticipationMiddle, anticipationDuration))), aKey.value), anticipationQuantity);\n    var endValue = anticipation;\n    if (time < anticipationStart) {\n        return anticipation;\n    } else if (time < anticipationMiddle) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue[i], midValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationStart, anticipationMiddle, startValue, midValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else if (time <= anticipationEnd) {\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < value.length; i++) {\n                anticipation[i] = bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue[i], endValue[i], [\n                    slowOut,\n                    0,\n                    slowIn,\n                    1\n                ]);\n            }\n            return anticipation;\n        } else {\n            return bezierInterpolation(time, anticipationMiddle, anticipationEnd, midValue, endValue, [\n                slowOut,\n                0,\n                slowIn,\n                1\n            ]);\n        }\n    } else {\n        return anticipation;\n    }\n}\nfunction followThroughAtTime(t) {\n    var fThrough = zeroValue;\n    if (elasticity == 0)\n        return fThrough;\n    var propSpeed;\n    if (!simulate) {\n        if (numKeys < 2)\n            return fThrough;\n        if (nearestKey(t).index == 1)\n            return fThrough;\n        propSpeed = length(velocityAtTime(t));\n        if (propSpeed >= threshold)\n            return fThrough;\n    } else {\n        propSpeed = getPropWorldSpeed(t, thisProperty);\n        if (propSpeed >= threshold)\n            return fThrough;\n    }\n    var fThroughStart = 0;\n    var fThroughTime = 0;\n    if (simulate) {\n        var speedI = getPropWorldSpeed(t, thisProperty);\n        var i = t;\n        while (speedI < threshold && i > 0) {\n            i = $bm_sub(i, $bm_div(thisComp.frameDuration, moBlurPrecision));\n            speedI = getPropWorldSpeed(i, thisProperty);\n        }\n        fThroughStart = i;\n    } else {\n        var fThroughKey = getPrevKey(t);\n        fThroughStart = fThroughKey.time;\n    }\n    if (fThroughStart == 0)\n        return fThrough;\n    fThroughTime = $bm_sub(t, fThroughStart);\n    if (simulate)\n        fThrough = $bm_div(getPropWorldVelocity($bm_sub(fThroughStart, thisComp.frameDuration), thisProperty), 2);\n    else\n        fThrough = $bm_div(velocityAtTime($bm_sub(fThroughStart, thisComp.frameDuration)), 2);\n    if (bounce) {\n        var cycleDamp = Math.exp($bm_mul($bm_mul(fThroughTime, damping), 0.1));\n        var damp = $bm_div(Math.exp($bm_mul(fThroughTime, damping)), $bm_div(elasticity, 2));\n        var cycleDuration = $bm_div(1, $bm_mul(elasticity, 2));\n        cycleDuration = Math.round(timeToFrames(cycleDuration));\n        cycleDuration = framesToTime(cycleDuration);\n        var midDuration = $bm_div(cycleDuration, 2);\n        var maxValue = $bm_mul(fThrough, midDuration);\n        var cycvarime = fThroughTime;\n        var numEndCycles = 1;\n        while (cycvarime > cycleDuration) {\n            cycvarime = $bm_sub(cycvarime, cycleDuration);\n            cycleDuration = $bm_div(cycleDuration, cycleDamp);\n            cycleDuration = Math.round(timeToFrames(cycleDuration));\n            if (cycleDuration < 2) {\n                cycleDuration = 2;\n                numEndCycles++;\n            }\n            cycleDuration = framesToTime(cycleDuration);\n            midDuration = $bm_div(cycleDuration, 2);\n            maxValue = $bm_div($bm_mul(fThrough, midDuration), damp);\n            if (numEndCycles > 100 / damping && maxValue < threshold)\n                return zeroValue;\n        }\n        if (cycvarime < midDuration)\n            fThrough = bezierInterpolation(cycvarime, 0, midDuration, 0, maxValue, [\n                0,\n                0.1,\n                slowIn,\n                1\n            ]);\n        else\n            fThrough = bezierInterpolation(cycvarime, midDuration, cycleDuration, maxValue, 0, [\n                $bm_sub(1, slowIn),\n                0,\n                1,\n                0.9\n            ]);\n    } else {\n        var damp = Math.exp($bm_mul(fThroughTime, damping));\n        var sinus = $bm_mul($bm_mul($bm_mul(elasticity, fThroughTime), 2), Math.PI);\n        sinus = Math.sin(sinus);\n        sinus = $bm_mul($bm_div(0.3, elasticity), sinus);\n        sinus = $bm_div(sinus, damp);\n        if (Math.abs(sinus) < $bm_div(threshold, 100))\n            return 0;\n        fThrough = $bm_mul(fThrough, sinus);\n        if (threshold > 0) {\n            fThrough = $bm_mul(fThrough, $bm_sub(1, $bm_div(propSpeed, threshold)));\n        }\n    }\n    if (bounce) {\n        var prevValue = valueAtTime($bm_sub(fThroughStart, thisComp.frameDuration));\n        var startValue = valueAtTime(fThroughStart);\n        if ($bm_isInstanceOfArray(value)) {\n            for (var i = 0; i < prevValue.length; i++) {\n                if (prevValue[i] > startValue[i])\n                    fThrough[i] = Math.abs(fThrough[i]);\n                if (prevValue[i] < startValue[i])\n                    fThrough[i] = $bm_neg(Math.abs(fThrough[i]));\n            }\n        } else {\n            if (prevValue > startValue)\n                fThrough = Math.abs(fThrough);\n            if (prevValue < startValue)\n                fThrough = $bm_neg(Math.abs(fThrough));\n        }\n    }\n    if (simulate) {\n        if (!isThisPosition) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer));\n            fThrough = $bm_sub(thisLayer.fromWorld(fThrough), thisLayer.anchorPoint);\n        } else if (thisLayer.hasParent) {\n            fThrough = $bm_sum(fThrough, getLayerWorldPos(time, thisLayer.parent));\n            fThrough = $bm_sub(thisLayer.parent.fromWorld(fThrough), thisLayer.parent.anchorPoint);\n        }\n    }\n    return fThrough;\n}\nfunction followThrough() {\n    var propSpeed = length(velocity);\n    if (propSpeed < threshold)\n        return followThroughAtTime($bm_sub(time, overlapDuration));\n    var fThrough = zeroValue;\n    var t = time;\n    while (t > 0) {\n        t = $bm_sub(t, thisComp.frameDuration);\n        if (simulate)\n            propSpeed = getPropWorldSpeed($bm_sub(t, overlapDuration), thisProperty);\n        else\n            propSpeed = length(velocityAtTime(t));\n        if (propSpeed < threshold) {\n            fThrough = followThroughAtTime($bm_sub(t, overlapDuration));\n            break;\n        }\n    }\n    return linear(time, t, $bm_sum(t, $bm_mul(anticipationDuration, 2)), fThrough, zeroValue);\n}\nfunction smartSmooth(axis) {\n    var startKey = nearestKey(time);\n    var endKey = startKey;\n    if (time == startKey.time)\n        return 0;\n    if (time < startKey.time && startKey.index == 1)\n        return 0;\n    if (time > startKey.time && startKey.index == numKeys)\n        return 0;\n    if (time < startKey.time)\n        startKey = key($bm_sub(startKey.index, 1));\n    if (time > startKey.time)\n        endKey = key($bm_sum(startKey.index, 1));\n    var sI = 0.66;\n    var sO = 0.33;\n    var sIV = 1;\n    var sOV = 0;\n    var sVal = startKey.value;\n    var eVal = endKey.value;\n    if ($bm_isInstanceOfArray(value)) {\n        sVal = sVal[axis];\n        eVal = eVal[axis];\n    }\n    var sTime = startKey.time;\n    var eTime = endKey.time;\n    if (isKeyTop(startKey, axis))\n        sO = slowOut;\n    else {\n        var prevKey = key($bm_sub(startKey.index, 1));\n        var pVal = prevKey.value;\n        if ($bm_isInstanceOfArray(value))\n            pVal = pVal[axis];\n        sOV = $bm_div($bm_sub(sVal, pVal), $bm_sub(eVal, pVal));\n    }\n    if (isKeyTop(endKey, axis)) {\n        sI = slowIn;\n        if (endKey.index != numKeys) {\n            var nextKey = key($bm_sum(endKey.index, 1));\n            var nVal = nextKey.value;\n            if ($bm_isInstanceOfArray(value))\n                nVal = nVal[axis];\n            if (Math.abs(nVal - eVal) < 0.01 && doFollowThrough)\n                sI = 1;\n        }\n    } else {\n        var nextKey = key($bm_sum(endKey.index, 1));\n        var nVal = nextKey.value;\n        if ($bm_isInstanceOfArray(value))\n            nVal = nVal[axis];\n        sIV = $bm_div($bm_sub(eVal, sVal), $bm_sub(nVal, sVal));\n    }\n    if (endKey.index == numKeys && doFollowThrough) {\n        sI = 1;\n    }\n    var val = value;\n    if ($bm_isInstanceOfArray(value))\n        val = val[axis];\n    return $bm_sub(bezierInterpolation(time, sTime, eTime, sVal, eVal, [\n        sO,\n        sOV,\n        sI,\n        sIV\n    ]), val);\n}\nfunction overlap() {\n    var ol = zeroValue;\n    if (isThisPosition && !hasParent)\n        return zeroValue;\n    ol = $bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisProperty), getPropWorldValue(time, thisProperty));\n    var motionRatio = $bm_div($bm_div(length(zeroValue, ol), thisLayer.width), 2);\n    if (isThisPosition) {\n        var originalDistance = length(valueAtTime(0));\n        motionRatio = $bm_div(length(zeroValue, ol), thisComp.width);\n    }\n    ol = $bm_sum(ol, getPropWorldValue(time, thisProperty));\n    ol = $bm_sum(ol, $bm_mul($bm_mul($bm_sub(getPropWorldValue($bm_sub(time, overlapDuration), thisLayer.anchorPoint), ol), motionRatio), flexibility));\n    ol = thisLayer.fromWorld(ol);\n    if (!isThisPosition)\n        ol = $bm_sub(ol, value);\n    else {\n        ol = linear(flexibility, 0, 100, $bm_div(ol, 2), 0);\n        var prevParentWorldPos = getLayerWorldPos($bm_sub(time, overlapDuration), parent);\n        ol = $bm_sum(ol, $bm_mul($bm_mul($bm_mul(thisLayer.fromWorld(prevParentWorldPos), motionRatio), flexibility), 5));\n    }\n    return ol;\n}\nvar okToGo = false;\nif (simulate && fx.enabled)\n    okToGo = true;\nelse if (numKeys > 1 && fx.enabled)\n    okToGo = true;\nif (okToGo) {\n    var smartSmoothResult = zeroValue;\n    if (doInterpolation) {\n        if ($bm_isInstanceOfArray(value)) {\n            if (value.length == 2)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1)\n                ];\n            else if (value.length == 3)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2)\n                ];\n            else if (value.length == 4)\n                smartSmoothResult = [\n                    smartSmooth(0),\n                    smartSmooth(1),\n                    smartSmooth(2),\n                    smartSmooth(3)\n                ];\n        } else {\n            smartSmoothResult = smartSmooth(0);\n        }\n    }\n    if (doAnticipation)\n        result = $bm_sum(result, anticipate());\n    result = $bm_sum(result, smartSmoothResult);\n    if (doFollowThrough)\n        result = $bm_sum(result, followThrough());\n    if (doOverlap)\n        result = $bm_sum(result, overlap());\n}\n$bm_rt = result;"}},"ao":0,"ef":[{"ty":5,"nm":"Ålosilo pli pura","np":34,"ix":1,"en":1,"ef":[{"ty":7,"nm":"Anticipation","ix":1,"v":{"a":0,"k":0,"ix":1}},{"ty":7,"nm":"Smart Interpolation","ix":2,"v":{"a":0,"k":0,"ix":2}},{"ty":7,"nm":"Follow Through","ix":3,"v":{"a":0,"k":1,"ix":3}},{"ty":6,"nm":"Anticipation","ix":4,"v":0},{"ty":0,"nm":"Duration (s)","ix":5,"v":{"a":0,"k":0.3,"ix":5}},{"ty":0,"nm":"Amplitude","ix":6,"v":{"a":0,"k":50,"ix":6}},{"ty":6,"nm":"","ix":7,"v":0},{"ty":6,"nm":"Interpolation","ix":8,"v":0},{"ty":0,"nm":"Slow In","ix":9,"v":{"a":0,"k":60,"ix":9}},{"ty":0,"nm":"Slow Out","ix":10,"v":{"a":0,"k":25,"ix":10}},{"ty":6,"nm":"","ix":11,"v":0},{"ty":6,"nm":"Follow Through","ix":12,"v":0},{"ty":0,"nm":"Elasticity","ix":13,"v":{"a":0,"k":10,"ix":13}},{"ty":0,"nm":"Elasticity random","ix":14,"v":{"a":0,"k":0,"ix":14}},{"ty":0,"nm":"Damping","ix":15,"v":{"a":0,"k":50,"ix":15}},{"ty":0,"nm":"Damping random","ix":16,"v":{"a":0,"k":0,"ix":16}},{"ty":7,"nm":"Bounce","ix":17,"v":{"a":0,"k":0,"ix":17}},{"ty":6,"nm":"","ix":18,"v":0},{"ty":6,"nm":"Spatial Options","ix":19,"v":0},{"ty":7,"nm":"Smart Interpolation","ix":20,"v":{"a":0,"k":0,"ix":20}},{"ty":7,"nm":"Mode","ix":21,"v":{"a":0,"k":1,"ix":21}},{"ty":6,"nm":"Overlap (simulation)","ix":22,"v":0},{"ty":7,"nm":"Overlap","ix":23,"v":{"a":0,"k":1,"ix":23}},{"ty":0,"nm":"Delay (s)","ix":24,"v":{"a":0,"k":0.05,"ix":24}},{"ty":0,"nm":"Overlap random","ix":25,"v":{"a":0,"k":0,"ix":25}},{"ty":6,"nm":"","ix":26,"v":0},{"ty":6,"nm":"Soft Body (simulation)","ix":27,"v":0},{"ty":7,"nm":"Soft Body","ix":28,"v":{"a":0,"k":1,"ix":28}},{"ty":0,"nm":"Soft-Body Flexibility","ix":29,"v":{"a":0,"k":100,"ix":29}},{"ty":6,"nm":"","ix":30,"v":0},{"ty":6,"nm":"","ix":31,"v":0},{"ty":0,"nm":"Precision","ix":32,"v":{"a":0,"k":1,"ix":32}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.092,-0.311],[20.812,6.185],[-1.125,3.787],[-0.314,0.23],[-15.26,-4.535],[-7.954,-4.593]],"o":[[-1.125,3.787],[-20.827,-6.189],[0.092,-0.311],[9.171,0.496],[15.246,4.53],[0.138,0.364]],"v":[[46.526,-29.4],[6.792,-33.75],[-28.868,-51.805],[-28.261,-52.608],[10.101,-44.883],[46.455,-30.405]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.094,0.118,0.118,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","cix":2,"ix":1},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.335,-1.872],[0,0],[25.873,7.683],[-1.395,4.715],[0,0],[-5.563,-0.3],[-15.258,-4.539],[-7.947,-4.609]],"o":[[0,0],[-1.413,4.698],[-25.908,-7.7],[0,0],[1.272,-1.413],[9.183,0.494],[15.259,4.521],[4.786,2.773]],"v":[[54.492,-23.28],[54.456,-22.432],[5.042,-27.837],[-39.321,-50.301],[-38.915,-50.989],[-28.266,-52.614],[10.093,-44.879],[46.456,-30.397]],"c":true},"ix":2},"nm":"Path 1"},{"ty":"fl","c":{"a":0,"k":[0.165,0.192,0.204,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"nm":"Fill 1"},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","cix":2,"ix":2}],"ip":0,"op":250,"st":0}],"markers":[]}